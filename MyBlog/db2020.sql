/*
 Navicat Premium Data Transfer

 Source Server         : mysql
 Source Server Type    : MySQL
 Source Server Version : 50732
 Source Host           : localhost:3306
 Source Schema         : db2020

 Target Server Type    : MySQL
 Target Server Version : 50732
 File Encoding         : 65001

 Date: 22/03/2021 10:29:40
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for comment
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `con_id` bigint(20) NULL DEFAULT NULL,
  `com_id` bigint(20) NULL DEFAULT NULL,
  `by_id` bigint(20) NULL DEFAULT NULL,
  `com_content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL,
  `comm_time` datetime(0) NULL DEFAULT NULL,
  `children` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `upvote` int(100) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `comment_index_key`(`id`) USING BTREE,
  INDEX `FK_Reference_7`(`com_id`) USING BTREE,
  INDEX `FK_Reference_8`(`con_id`) USING BTREE,
  INDEX `FK_Reference_9`(`by_id`) USING BTREE,
  CONSTRAINT `FK_Reference_7` FOREIGN KEY (`com_id`) REFERENCES `user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `FK_Reference_8` FOREIGN KEY (`con_id`) REFERENCES `user_content` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `FK_Reference_9` FOREIGN KEY (`by_id`) REFERENCES `user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 7 CHARACTER SET = latin1 COLLATE = latin1_swedish_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of comment
-- ----------------------------
INSERT INTO `comment` VALUES (5, 23, 2, NULL, '好，写得好', '2021-03-09 14:39:28', NULL, 1);

-- ----------------------------
-- Table structure for login_log
-- ----------------------------
DROP TABLE IF EXISTS `login_log`;
CREATE TABLE `login_log`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `u_id` bigint(20) NULL DEFAULT NULL,
  `ip` varchar(255) CHARACTER SET latin1 COLLATE latin1_swedish_ci NULL DEFAULT NULL,
  `create_time` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `login_log_index_key`(`id`) USING BTREE,
  INDEX `FK_Reference_12`(`u_id`) USING BTREE,
  CONSTRAINT `FK_Reference_12` FOREIGN KEY (`u_id`) REFERENCES `user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = latin1 COLLATE = latin1_swedish_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for resource
-- ----------------------------
DROP TABLE IF EXISTS `resource`;
CREATE TABLE `resource`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET latin1 COLLATE latin1_swedish_ci NULL DEFAULT NULL,
  `url` varchar(255) CHARACTER SET latin1 COLLATE latin1_swedish_ci NULL DEFAULT NULL,
  `enabled` varchar(1) CHARACTER SET latin1 COLLATE latin1_swedish_ci NULL DEFAULT NULL,
  `remark` varchar(255) CHARACTER SET latin1 COLLATE latin1_swedish_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `resource_index_key`(`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = latin1 COLLATE = latin1_swedish_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for role
-- ----------------------------
DROP TABLE IF EXISTS `role`;
CREATE TABLE `role`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `role_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `role_value` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `role_matcher` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `enabled` varchar(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `remark` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `role_index_key`(`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = latin1 COLLATE = latin1_swedish_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for role_resource
-- ----------------------------
DROP TABLE IF EXISTS `role_resource`;
CREATE TABLE `role_resource`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `r_id` bigint(20) NULL DEFAULT NULL,
  `res_id` bigint(20) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `role_resource_index_key`(`id`) USING BTREE,
  INDEX `FK_Reference_1`(`r_id`) USING BTREE,
  INDEX `FK_Reference_2`(`res_id`) USING BTREE,
  CONSTRAINT `FK_Reference_1` FOREIGN KEY (`r_id`) REFERENCES `role` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `FK_Reference_2` FOREIGN KEY (`res_id`) REFERENCES `resource` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = latin1 COLLATE = latin1_swedish_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for role_user
-- ----------------------------
DROP TABLE IF EXISTS `role_user`;
CREATE TABLE `role_user`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `u_id` bigint(20) NULL DEFAULT NULL,
  `r_id` bigint(20) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `user_role_index_key`(`id`) USING BTREE,
  INDEX `FK_Reference_3`(`r_id`) USING BTREE,
  INDEX `FK_Reference_4`(`u_id`) USING BTREE,
  CONSTRAINT `FK_Reference_3` FOREIGN KEY (`r_id`) REFERENCES `role` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `FK_Reference_4` FOREIGN KEY (`u_id`) REFERENCES `user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = latin1 COLLATE = latin1_swedish_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for upvote
-- ----------------------------
DROP TABLE IF EXISTS `upvote`;
CREATE TABLE `upvote`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `u_id` bigint(20) NULL DEFAULT NULL,
  `content_id` bigint(20) NULL DEFAULT NULL,
  `ip` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `upvote` varchar(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `downvote` varchar(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `upvote_time` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `upvote_index_key`(`id`) USING BTREE,
  INDEX `FK_Reference_10`(`u_id`) USING BTREE,
  INDEX `FK_Reference_11`(`content_id`) USING BTREE,
  CONSTRAINT `FK_Reference_10` FOREIGN KEY (`u_id`) REFERENCES `user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `FK_Reference_11` FOREIGN KEY (`content_id`) REFERENCES `user_content` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 26 CHARACTER SET = latin1 COLLATE = latin1_swedish_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of upvote
-- ----------------------------
INSERT INTO `upvote` VALUES (13, 2, 23, '0:0:0:0:0:0:0:1', '1', '1', '2021-03-09 14:39:16');
INSERT INTO `upvote` VALUES (14, 2, 24, '0:0:0:0:0:0:0:1', '1', '1', '2021-03-12 10:49:05');
INSERT INTO `upvote` VALUES (16, 2, 28, '0:0:0:0:0:0:0:1', '1', NULL, '2021-03-15 17:46:09');
INSERT INTO `upvote` VALUES (17, 2, 30, '0:0:0:0:0:0:0:1', '1', NULL, '2021-03-16 09:58:31');
INSERT INTO `upvote` VALUES (18, 2, 29, '0:0:0:0:0:0:0:1', '1', NULL, '2021-03-16 09:58:43');
INSERT INTO `upvote` VALUES (19, 2, 33, '0:0:0:0:0:0:0:1', '1', NULL, '2021-03-16 14:25:29');
INSERT INTO `upvote` VALUES (20, 2, 32, '0:0:0:0:0:0:0:1', '1', NULL, '2021-03-16 14:25:30');
INSERT INTO `upvote` VALUES (21, 2, 31, '0:0:0:0:0:0:0:1', '1', NULL, '2021-03-16 14:25:32');
INSERT INTO `upvote` VALUES (22, 2, 37, '0:0:0:0:0:0:0:1', '1', NULL, '2021-03-16 15:14:42');
INSERT INTO `upvote` VALUES (23, 2, 36, '0:0:0:0:0:0:0:1', '1', NULL, '2021-03-16 15:27:13');
INSERT INTO `upvote` VALUES (24, 2, 38, '0:0:0:0:0:0:0:1', '1', NULL, '2021-03-16 15:27:14');
INSERT INTO `upvote` VALUES (25, 2, 35, '0:0:0:0:0:0:0:1', '1', NULL, '2021-03-16 15:56:54');

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `email` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `password` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `phone` varchar(11) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `nick_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `state` varchar(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `img_url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `enable` varchar(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `user_index_key`(`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = latin1 COLLATE = latin1_swedish_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES (2, '2415447576@qq.com', '9e9ec340b8d27aab8b5762b49c3e2e70', '15279239570', 'Stefan', '1', '/images/image/20210316/20210316141604_708.jpg', '1');

-- ----------------------------
-- Table structure for user_content
-- ----------------------------
DROP TABLE IF EXISTS `user_content`;
CREATE TABLE `user_content`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `u_id` bigint(20) NULL DEFAULT NULL,
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `category` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL,
  `personal` varchar(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `rpt_time` datetime(0) NULL,
  `img_url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `nick_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `upvote` int(100) NOT NULL,
  `downvote` int(100) NULL DEFAULT NULL,
  `comment_num` int(100) NULL DEFAULT NULL,
  `content_desc` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `user_content_index_key`(`id`) USING BTREE,
  INDEX `FK_Reference_6`(`u_id`) USING BTREE,
  CONSTRAINT `FK_Reference_6` FOREIGN KEY (`u_id`) REFERENCES `user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 39 CHARACTER SET = latin1 COLLATE = latin1_swedish_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user_content
-- ----------------------------
INSERT INTO `user_content` VALUES (23, 2, 'Linux 常用命令', '其他梦', '<span> <span> 把常用的tar解压命令总结下，当作备忘：<br />\r\ntar<br />\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<span style=\"background-color:;\">-c:</span> 建立压缩档案\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-x：解压\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-t：查看内<span style=\"background-color:#E53333;\"><span style=\"color:#E53333;\"><span style=\"color:#E53333;\"></span></span></span>容\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-r：向压缩归档文件末尾追加文件\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-u：更新原压缩包中的文件\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-z：有gzip属性的\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-j：有bz2属性的\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-Z：有compress属性的\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-v：显示所有过程\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-O：将文件解开到标准输出\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	下面的参数-f是必须的\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	# tar -cf all.tar *.jpg\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	# tar -rf all.tar *.gif\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	# tar -uf all.tar logo.gif\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	# tar -tf all.tar\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	这条命令是列出all.tar包中所有文件，-t是列出文件的意思\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	# tar -xf all.tar\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	这条命令是解出all.tar包中所有文件，-x是解开的意思\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	压缩\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	tar –cvf jpg.tar *.jpg&nbsp; 将目录里所有jpg文件打包成tar.jpg\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	tar –czf jpg.tar.gz *.jpg&nbsp; &nbsp;将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	tar –cjf jpg.tar.bz2 *.jpg 将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	tar –cZf jpg.tar.Z *.jpg&nbsp; &nbsp;将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	rar a jpg.rar *.jpg rar格式的压缩，需要先下载rar for linux\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	zip jpg.zip *.jpg&nbsp; &nbsp;zip格式的压缩，需要先下载zip for linux\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	解压\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	tar –xvf file.tar&nbsp; 解压 tar包\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	tar -xzvf file.tar.gz 解压tar.gz\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	tar -xjvf file.tar.bz2&nbsp; &nbsp;解压 tar.bz2\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	tar –xZvf file.tar.Z&nbsp; &nbsp;解压tar.Z\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	unrar e file.rar 解压rar\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	unzip file.zip 解压zip\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	总结\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	*.tar 用 tar –xvf 解压\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	*.gz 用 gzip -d或者gunzip 解压\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	*.tar.gz和*.tgz 用 tar –xzf 解压\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	*.bz2 用 bzip2 -d或者用bunzip2 解压\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	*.tar.bz2用tar –xjf 解压\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	*.Z 用 uncompress 解压\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	*.tar.Z 用tar –xZf 解压\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	*.rar 用 unrar e解压\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	*.zip 用 unzip 解压\r\n</div>\r\n<div style=\"text-align:left;\">\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	linux下最常用的打包程序就是tar了，使用tar程序打出来的包我们常称为tar包，tar包文件的命令通常都是以.tar结尾的。生成tar包后，就可以用其它的程序来进行压缩。\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	1．命令格式：\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	tar[必要参数][选择参数][文件]\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	2．命令功能：\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	用来压缩和解压文件。tar本身不具有压缩功能。他是调用压缩功能实现的\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	3．命令参数：\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	必要参数有如下：\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-A 新增压缩文件到已存在的压缩\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-B 设置区块大小\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-c 建立新的压缩文件\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-d 记录文件的差别\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-r 添加文件到已经压缩的文件\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-u 添加改变了和现有的文件到已经存在的压缩文件\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-x 从压缩的文件中提取文件\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-t 显示压缩文件的内容\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-z 支持gzip解压文件\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-j 支持bzip2解压文件\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-Z 支持compress解压文件\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-v 显示操作过程\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-l 文件系统边界设置\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-k 保留原有文件不覆盖\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-m 保留文件不被覆盖\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-W 确认压缩文件的正确性\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	可选参数如下：\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-b 设置区块数目\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-C 切换到指定目录\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-f 指定压缩文件\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	--help 显示帮助信息\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	--version 显示版本信息\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	4．常见解压/压缩命令\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	tar\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	解包：tar xvf FileName.tar\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	打包：tar cvf FileName.tar DirName\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	（注：tar是打包，不是压缩！）\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	.gz\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	解压1：gunzip FileName.gz\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	解压2：gzip -d FileName.gz\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	压缩：gzip FileName\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	.tar.gz 和 .tgz\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	解压：tar zxvf FileName.tar.gz\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	压缩：tar zcvf FileName.tar.gz DirName\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	.bz2\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	解压1：bzip2 -d FileName.bz2\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	解压2：bunzip2 FileName.bz2\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	压缩： bzip2 -z FileName\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	.tar.bz2\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	解压：tar jxvf FileName.tar.bz2\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	压缩：tar jcvf FileName.tar.bz2 DirName\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	.bz\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	解压1：bzip2 -d FileName.bz\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	解压2：bunzip2 FileName.bz\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	压缩：未知\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	.tar.bz\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	解压：tar jxvf FileName.tar.bz\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	压缩：未知\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	.Z\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	解压：uncompress FileName.Z\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	压缩：compress FileName\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	.tar.Z\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	解压：tar Zxvf FileName.tar.Z\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	压缩：tar Zcvf FileName.tar.Z DirName\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	.zip\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	解压：unzip FileName.zip\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	压缩：zip FileName.zip DirName\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	.rar\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	解压：rar x FileName.rar\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	压缩：rar a FileName.rar DirName\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	5．使用实例\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	实例1：将文件全部打包成tar包\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	命令：\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	tar -cvf log.tar log2012.log\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	tar -zcvf log.tar.gz log2012.log\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	tar -jcvf log.tar.bz2 log2012.log\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	改变文件的权限\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	chmod 用户修改文件或者目录的权限\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-r：读取\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-w：写入\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-x：执行\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	特殊权限\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-suid：Set User ID\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-sgid：Set Group ID\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-sticky：粘滞位\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	权限范围\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-u：User，即文件或目录的拥有者；\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-g：Group，即文件或目录的所属群组；\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-o：Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围；\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-a：All，即全部的用户，包含拥有者、所属群组以及其他用户。\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	chmod语法：<span style=\"background-color:#E53333;\"></span> \r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	chmod [-cfRv][--help][--version][&lt;权限范围&gt;+/-/=&lt;权限设置...&gt;][文件或目录...]\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	chmod [-cfRv][--help][--version][数字代号][文件或目录...]\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	chmod [-cfRv][--help][--reference=&lt;参考文件或目录&gt;][--version][文件或目录...]\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	选项说明:\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-c或--changes：效果类似-v参数，但仅返回更改的部分；\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-f或--quiet或--silent：不显示错误信息；\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-R或--recursive：递归处理，将指定目录下的所有文件及子目录一并处理；\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	-v或--verbose：显示指令执行过程；\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	--help：显示在线帮助信息；\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	--reference=&lt;参考文件或目录&gt;：把指定文件或目录的权限全部设成和参考文件或目录的权限相同；\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	--version：显示版本信息；\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	&lt;权限范围&gt;+&lt;权限设置&gt;：开启权限范围的文件或目录的该项权限设置；\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	&lt;权限范围&gt;-&lt;权限设置&gt;：关闭权限范围的文件或目录的该项权限设置；\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	<br />\r\n</div>\r\n<div style=\"text-align:left;\">\r\n	&lt;权限范围&gt;=&lt;权限设置&gt;：指定权限范围的文件或目录的该项权限设置。\r\n</div>\r\n</span> </span>', '1', '2021-03-12 14:09:20', '/images/icon_m.jpg', 'Stefan', 1, -1, 1, '解压命令大全，你想要的全都有');
INSERT INTO `user_content` VALUES (24, 2, 'Solr 搜索引擎的配置', '工作梦', '<span style=\"color:#FF9900;\">&lt;!-- 定义分词类型 --&gt;</span><br />\r\n<span style=\"color:#FF9900;\">&lt;fieldType name=\"ik_word\" class=\"solr.TextField\"&gt;</span><br />\r\n<span style=\"color:#FF9900;\">&nbsp; &nbsp;&lt;analyzer type=\"index\"&gt;</span><br />\r\n<span style=\"color:#FF9900;\">&nbsp; &nbsp; &nbsp;&lt;tokenizer class=\"org.wltea.analyzer.lucene.IKTokenizerFactory\" useSmart=\"false\" conf=\"ik.conf\"/&gt;</span><br />\r\n<span style=\"color:#FF9900;\">&nbsp; &nbsp; &nbsp;&lt;filter class=\"solr.LowerCaseFilterFactory\"/&gt;</span><br />\r\n<span style=\"color:#FF9900;\">&nbsp; &nbsp;&lt;/analyzer&gt;</span><br />\r\n<span style=\"color:#FF9900;\">&nbsp; &nbsp;&lt;analyzer type=\"query\"&gt;</span><br />\r\n<span style=\"color:#FF9900;\">&nbsp; &nbsp; &nbsp;&lt;tokenizer class=\"org.wltea.analyzer.lucene.IKTokenizerFactory\" useSmart=\"true\" conf=\"ik.conf\"/&gt;</span><br />\r\n<span style=\"color:#FF9900;\">&nbsp; &nbsp; &nbsp;&lt;filter class=\"solr.LowerCaseFilterFactory\"/&gt;</span><br />\r\n<span style=\"color:#FF9900;\">&nbsp; &nbsp;&lt;/analyzer&gt;</span><br />\r\n<span style=\"color:#FF9900;\">&nbsp; &lt;/fieldType&gt;</span><br />\r\n<span style=\"color:#FF9900;\">&nbsp;</span><br />\r\n<span style=\"color:#FF9900;\">&nbsp; &nbsp;&lt;!-- 自定义添加filed --&gt;</span><br />\r\n<span style=\"color:#FF9900;\">&nbsp; &lt;field name=\"description\" type=\"ik_word\" indexed=\"true\" stored=\"true\"/&gt;</span><br />\r\n<br />\r\n<span style=\"color:#FF9900;\">&lt;!--Maven 配置依赖--&gt;</span><br />\r\n<span style=\"color:#FF9900;\">&lt;dependency&gt;</span><br />\r\n<span style=\"color:#FF9900;\">&nbsp; &nbsp; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br />\r\n<span style=\"color:#FF9900;\">&nbsp; &nbsp; &lt;artifactId&gt;spring-boot-starter-data-solr&lt;/artifactId&gt;</span><br />\r\n<span style=\"color:#FF9900;\">&lt;/dependency&gt;</span><br />\r\n<br />\r\n<span style=\"color:#FF9900;\">yml 或者 properties中配置solr信息</span><br />\r\n<span style=\"color:#FF9900;\"># solr配置</span><br />\r\n<span style=\"color:#FF9900;\">spring.data.solr.host=http://localhost:8983/solr/book_core</span><br />\r\n<span style=\"color:#E56600;\"></span>', '0', '2021-03-10 17:17:46', '/images/icon_m.jpg', 'Stefan', 1, -1, 0, '基于springboot 整合Solr 的一些配置');
INSERT INTO `user_content` VALUES (28, 2, 'Robot Framework', '工作梦', '<span style=\"color:#FF9900;background-color:#E56600;\">01、should contain 、 should not contain 与should contain x times</span><br />\r\n<br />\r\nshould contain&nbsp; &nbsp; ${list_b}&nbsp; &nbsp; 1.0&nbsp; &nbsp;&nbsp;<br />\r\nshould not contain&nbsp; &nbsp; ${list_b}&nbsp; &nbsp; 1&nbsp; &nbsp;&nbsp;<br />\r\nshould contain x times&nbsp; &nbsp; ${list_b}&nbsp; &nbsp; 21&nbsp; &nbsp; 2<br />\r\n<br />\r\n说明：变量${list_b}包含对象1.0而不包含对象1，且对象21在变量${list_b}出现了两次。<br />\r\n<br />\r\n&nbsp; &nbsp; &nbsp;<br />\r\n<br />\r\n<span style=\"background-color:#FF9900;\">02、should be empty 与 should not be empty</span><br />\r\n<br />\r\nshould be empty&nbsp; &nbsp; ${list_c}<br />\r\nshould not be empty&nbsp; &nbsp; ${list_a}<br />\r\n<br />\r\n说明：变量${list_c}没有赋值，所以为空；相反，变量${list_a}有赋初始值，故为非空。<br />\r\n<br />\r\n&nbsp;<br />\r\n<br />\r\n<span style=\"background-color:#FF9900;\">03、should be equal 与 should not be equal</span><br />\r\n<br />\r\nshould be equal&nbsp; &nbsp; ${list_a[1]}&nbsp; &nbsp; ${list_b[1]}<br />\r\nshould not be equal&nbsp; &nbsp; ${list_a}&nbsp; &nbsp; ${list_b}<br />\r\n<br />\r\n说明：${list_a[1]}=a，${list_b[1]}=a故两个对象相等;而${list_a}和${list_b}有元素不一致，这两个对象不相等。<br />\r\n<br />\r\n&nbsp;<br />\r\n<br />\r\n<span style=\"background-color:#E56600;\">04、Should Be Equal As Numbers 与 Should not Be Equal As Numbers</span><br />\r\n<br />\r\nShould Be Equal As Numbers&nbsp; &nbsp; ${list_b[0]}&nbsp; &nbsp; 1.0000<br />\r\nShould not Be Equal As Numbers&nbsp; &nbsp; ${list_b[0]}&nbsp; &nbsp; 1.1<br />\r\n<br />\r\n说明：${list_b[0]}=1，忽略精度，故与1.0000相等；而即使是忽略精度，1与1.1还是不相等的；<br />\r\n<br />\r\n&nbsp;<br />\r\n<br />\r\n<span style=\"background-color:#E56600;\">05、Should Be Equal As Integers与Should not Be Equal As Integers</span><br />\r\n<br />\r\nShould Be Equal As Integers&nbsp; &nbsp; ${list_a[3]}&nbsp; &nbsp; ${list_b[3]}<br />\r\nShould not Be Equal As Integers&nbsp; &nbsp; ${list_a[4]}&nbsp; &nbsp; ${list_b[4]}<br />\r\n<br />\r\n说明：${list_a[3]}=21，${list_b[3]}=21，而系统默认为字符串格式的“21”,故需要转化为整数类型，转化为整数后两个对象相等；<br />\r\n<br />\r\n${list_a[4]}=12，${list_b[4]}=21，即使转化为整数后两个对象依旧是不相等；<br />\r\n<br />\r\n&nbsp;<br />\r\n<br />\r\n<span style=\"background-color:#E56600;\">06、Should Be Equal As Strings与Should not Be Equal As Strings</span><br />\r\n<br />\r\nShould Be Equal As Strings&nbsp; &nbsp; ${list_a[2]}&nbsp; &nbsp; ${list_b[2]}<br />\r\nShould not Be Equal As Strings&nbsp; &nbsp; ${list_a[0]}&nbsp; &nbsp; ${list_b[0]}<br />\r\n<br />\r\n说明：${list_a[2]}=${21}，${list_b[2]}=${21}，而均为数值型的21,故需要转化为字符串类型，转化为字符串后两个对象相等；<br />\r\n<br />\r\n&nbsp;<br />\r\n<br />\r\n<span style=\"background-color:#E56600;\">07、Should Be True与Should not Be True</span><br />\r\n<br />\r\nShould Be True&nbsp; &nbsp; ${list_a[0]} &lt; 10<br />\r\nShould not Be True&nbsp; &nbsp; ${list_a[0]} &lt; 1<br />\r\n<br />\r\n说明：${list_a[0]}=1（字符串类型），其ASCII值比字符串10的ASCII值小；<br />\r\n<br />\r\n&nbsp;<br />\r\n<br />\r\n<span style=\"background-color:#E56600;\">08、Should start With与Should not start With&nbsp;</span><br />\r\nShould start With&nbsp; &nbsp; ${string}&nbsp; &nbsp; peng<br />\r\nShould not start With&nbsp; &nbsp; ${string}&nbsp; &nbsp; h<br />\r\n<br />\r\n说明：${string}=”pengliwen is in hangzhou“是以peng开头，而非以h开头；<br />\r\n<br />\r\n&nbsp;<br />\r\n<br />\r\n<span style=\"background-color:#E56600;\">09、Should End With与Should not End With</span><br />\r\n<br />\r\nShould End With&nbsp; &nbsp; ${string}&nbsp; &nbsp; hangzhou<br />\r\nShould not End With&nbsp; &nbsp; ${string}&nbsp; &nbsp; pengliwen<br />\r\n<br />\r\n说明：${string}=”pengliwen is in hangzhou“是以hangzhou结尾，而非以pengliwen结尾；<br />\r\n<br />\r\n&nbsp;<br />\r\n<br />\r\n<span style=\"background-color:#E56600;\">10、should match与should not match</span><br />\r\n<br />\r\nshould match&nbsp; &nbsp; ${name}&nbsp; &nbsp; p??<br />\r\nshould not match&nbsp; &nbsp; ${string}&nbsp; &nbsp; h?*<br />\r\n<br />\r\n说明：模式匹配和shell中的通配符类似，它区分大小写，\'*\'匹配0~无穷多个字符，“？”单个字符<br />\r\n<br />\r\n${name}=plw,由以p开头的三个字母组成<br />\r\n<br />\r\n&nbsp;<br />\r\n<br />\r\n<span style=\"background-color:#E56600;\">11、Should Match Regexp与Should not Match Regexp</span><br />\r\n<br />\r\nShould Match Regexp&nbsp; &nbsp; ${name}&nbsp; &nbsp; ^\\\\w{3}$<br />\r\nShould not Match Regexp&nbsp; &nbsp; ${name}&nbsp; &nbsp; ^\\\\d{3}$<br />\r\n<br />\r\n说明：反斜杠在测试数据是转义字符，因此模式中要使用双重转义；\'^\'和\'$\'字符可以用来表示字符串的开头和结尾<br />\r\n<br />\r\n${name}=plw，是有三个字母--w{3}组成，而不是由三个数字--d{3}组成。<br />', '0', '2021-03-15 17:39:47', '/images/icon_m.jpg', 'Stefan', 1, 0, 0, 'Should 断言');
INSERT INTO `user_content` VALUES (29, 2, 'Spring-Boot', '工作梦', '<p class=\"md-end-block md-p\" style=\"color:#B8BFC6;font-family:&quot;font-size:16px;\">\r\n	<span class=\"md-pair-s \"><strong>前端页面：</strong></span>\r\n</p>\r\n<pre class=\"md-fences mock-cm md-end-block\">&lt;form class=\"layui-form\" action=\"javascript:void(0);\"&gt;\r\n    &lt;div class=\"layui-form-item\"&gt;\r\n        &lt;img class=\"logo\" src=\"images/logo_new.png\" /&gt;\r\n        &lt;div class=\"title\"&gt;SP Admin&lt;/div&gt;\r\n        &lt;div class=\"desc\"&gt;\r\n            青 岛 市 最 具 影 响 力 的 开源项目 之 一\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"layui-form-item\"&gt;\r\n        &lt;input name=\"username\" type=\"text\" placeholder=\"账 户\" value=\"admin\" hover class=\"layui-input\"  /&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"layui-form-item\"&gt;\r\n        &lt;input name=\"password\" type=\"password\" placeholder=\"密 码\" value=\"admin\" hover class=\"layui-input\"  /&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"layui-form-item\"&gt;\r\n        &lt;input placeholder=\"验证码\" name=\"verCode\" hover class=\"code layui-input layui-input-inline\"  /&gt;\r\n        &lt;img src=\"/sys/captcha\" class=\"codeImage\" id=\"captchaImage\"/&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"layui-form-item\"&gt;\r\n        &lt;input type=\"checkbox\" name=\"rememberMe\" value=\"true\" title=\"记住密码\" lay-skin=\"primary\"&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"layui-form-item\"&gt;\r\n        &lt;button class=\"pear-btn pear-btn-success login\" lay-submit lay-filter=\"login\"&gt;\r\n            登 入\r\n        &lt;/button&gt;\r\n    &lt;/div&gt;\r\n&lt;/form&gt;</pre>\r\n<p class=\"md-end-block md-p\" style=\"color:#B8BFC6;font-family:&quot;font-size:16px;\">\r\n	<span class=\"md-pair-s \"><strong>后台登录：</strong></span>\r\n</p>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span><span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> <span class=\"cm-comment\" style=\"color:#DA924A;\">* 登录</span></span> <span> <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span><span class=\"cm-meta\" style=\"color:#B7B3B3;\">@PostMapping</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/login\"</span>)</span> <span><span class=\"cm-meta\" style=\"color:#B7B3B3;\">@ResponseBody</span></span> <span><span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-variable\">Result</span> <span class=\"cm-def\" style=\"color:#8D8DF0;\">login</span>(<span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">username</span>, <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">password</span>,<span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">verCode</span>,</span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\" style=\"color:#1CC685;\">boolean</span> <span class=\"cm-variable\">rememberMe</span>,<span class=\"cm-variable\">HttpServletRequest</span> <span class=\"cm-variable\">request</span>){</span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">try</span>{</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">if</span> (<span class=\"cm-variable\">CaptchaUtil</span>.<span class=\"cm-variable\">ver</span>(<span class=\"cm-variable\">verCode</span>, <span class=\"cm-variable\">request</span>)) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">Subject</span> <span class=\"cm-variable\">subject</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">ShiroUtils</span>.<span class=\"cm-variable\">getSubject</span>();</span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">password</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">MD5Utils</span>.<span class=\"cm-variable\">encrypt</span>(<span class=\"cm-variable\">username</span>, <span class=\"cm-variable\">password</span>);</span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">UsernamePasswordToken</span> <span class=\"cm-variable\">token</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\" style=\"color:#C88FD0;\">new</span> <span class=\"cm-variable\">UsernamePasswordToken</span>(<span class=\"cm-variable\">username</span>, <span class=\"cm-variable\">password</span>, <span class=\"cm-variable\">rememberMe</span>);</span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">subject</span>.<span class=\"cm-variable\">login</span>(<span class=\"cm-variable\">token</span>);</span> <span> &nbsp; &nbsp; &nbsp;  }<span class=\"cm-keyword\" style=\"color:#C88FD0;\">else</span>{</span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">CaptchaUtil</span>.<span class=\"cm-variable\">clear</span>(<span class=\"cm-variable\">request</span>);</span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">Result</span>.<span class=\"cm-variable\">error</span>(<span class=\"cm-number\" style=\"color:#64AB8F;\">400</span>,<span class=\"cm-string\" style=\"color:#D26B6B;\">\"验证码错误\"</span>);</span> <span> &nbsp; &nbsp; &nbsp;  }</span> <span> &nbsp;  }<span class=\"cm-keyword\" style=\"color:#C88FD0;\">catch</span> (<span class=\"cm-variable\">Exception</span> <span class=\"cm-variable\">e</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">e</span>.<span class=\"cm-variable\">printStackTrace</span>();</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">Result</span>.<span class=\"cm-variable\">error</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"登录失败\"</span>);</span> <span> &nbsp;  }</span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">Result</span>.<span class=\"cm-variable\">ok</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"登录成功\"</span>);</span> <span>}</span></pre>\r\n<p class=\"md-end-block md-p\" style=\"color:#B8BFC6;font-family:&quot;font-size:16px;\">\r\n	<span class=\"md-pair-s \"><strong>配置shlroConfig</strong></span>\r\n</p>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span><span class=\"cm-meta\" style=\"color:#B7B3B3;\">@Bean</span></span> <span><span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-variable\">ShiroFilterFactoryBean</span> <span class=\"cm-def\" style=\"color:#8D8DF0;\">shiroFilterFactoryBean</span> (<span class=\"cm-variable\">SecurityManager</span> <span class=\"cm-variable\">securityManager</span>) {</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">ShiroFilterFactoryBean</span> <span class=\"cm-variable\">shiroFilterFactoryBean</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\" style=\"color:#C88FD0;\">new</span> <span class=\"cm-variable\">ShiroFilterFactoryBean</span>();</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">shiroFilterFactoryBean</span>.<span class=\"cm-variable\">setSecurityManager</span>(<span class=\"cm-variable\">securityManager</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">shiroFilterFactoryBean</span>.<span class=\"cm-variable\">setLoginUrl</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/login.html\"</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">shiroFilterFactoryBean</span>.<span class=\"cm-variable\">setUnauthorizedUrl</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/403\"</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">Map</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span>, <span class=\"cm-variable\">Filter</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">filtersMap</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\" style=\"color:#C88FD0;\">new</span> <span class=\"cm-variable\">LinkedHashMap</span><span class=\"cm-operator\">&lt;&gt;</span>();</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">filtersMap</span>.<span class=\"cm-variable\">put</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"kickout\"</span>, <span class=\"cm-variable\">kickoutSessionControlFilter</span>());</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">shiroFilterFactoryBean</span>.<span class=\"cm-variable\">setFilters</span>(<span class=\"cm-variable\">filtersMap</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">Map</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span>, <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">filterChainDefinitionMap</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\" style=\"color:#C88FD0;\">new</span> <span class=\"cm-variable\">LinkedHashMap</span><span class=\"cm-operator\">&lt;&gt;</span>();</span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 静态文件</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">filterChainDefinitionMap</span>.<span class=\"cm-variable\">put</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/css/**\"</span>,<span class=\"cm-string\" style=\"color:#D26B6B;\">\"anon\"</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">filterChainDefinitionMap</span>.<span class=\"cm-variable\">put</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/lib/**\"</span>,<span class=\"cm-string\" style=\"color:#D26B6B;\">\"anon\"</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">filterChainDefinitionMap</span>.<span class=\"cm-variable\">put</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/data/**\"</span>,<span class=\"cm-string\" style=\"color:#D26B6B;\">\"anon\"</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">filterChainDefinitionMap</span>.<span class=\"cm-variable\">put</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/images/**\"</span>,<span class=\"cm-string\" style=\"color:#D26B6B;\">\"anon\"</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">filterChainDefinitionMap</span>.<span class=\"cm-variable\">put</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/js/**\"</span>,<span class=\"cm-string\" style=\"color:#D26B6B;\">\"anon\"</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">filterChainDefinitionMap</span>.<span class=\"cm-variable\">put</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/file/**\"</span>,<span class=\"cm-string\" style=\"color:#D26B6B;\">\"anon\"</span>);</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 登录注册</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">filterChainDefinitionMap</span>.<span class=\"cm-variable\">put</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/login.html\"</span>,<span class=\"cm-string\" style=\"color:#D26B6B;\">\"anon\"</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">filterChainDefinitionMap</span>.<span class=\"cm-variable\">put</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/sys/logout\"</span>,<span class=\"cm-string\" style=\"color:#D26B6B;\">\"anon\"</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">filterChainDefinitionMap</span>.<span class=\"cm-variable\">put</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/sys/login\"</span>,<span class=\"cm-string\" style=\"color:#D26B6B;\">\"anon\"</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">filterChainDefinitionMap</span>.<span class=\"cm-variable\">put</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/sys/register\"</span>,<span class=\"cm-string\" style=\"color:#D26B6B;\">\"anon\"</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">filterChainDefinitionMap</span>.<span class=\"cm-variable\">put</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/sys/captcha\"</span>,<span class=\"cm-string\" style=\"color:#D26B6B;\">\"anon\"</span>);</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*  authc：所有的url都不许，认证通过后才可以访问；</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*  anon：所有的url都可以匿名访问</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*  user:表示记住我或认证通过才可以访问</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">filterChainDefinitionMap</span>.<span class=\"cm-variable\">put</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/**\"</span>, <span class=\"cm-string\" style=\"color:#D26B6B;\">\"kickout,user\"</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">shiroFilterFactoryBean</span>.<span class=\"cm-variable\">setFilterChainDefinitionMap</span>(<span class=\"cm-variable\">filterChainDefinitionMap</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">shiroFilterFactoryBean</span>;</span> <span>}</span> <span><span></span></span> <span><span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> <span class=\"cm-comment\" style=\"color:#DA924A;\">* cookie管理对象</span></span> <span> <span class=\"cm-comment\" style=\"color:#DA924A;\">* @return</span></span> <span> <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span><span class=\"cm-meta\" style=\"color:#B7B3B3;\">@Bean</span></span> <span><span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-variable\">CookieRememberMeManager</span> <span class=\"cm-def\" style=\"color:#8D8DF0;\">rememberMeManager</span>(){</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">CookieRememberMeManager</span> <span class=\"cm-variable\">cookieRememberMeManager</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\" style=\"color:#C88FD0;\">new</span> <span class=\"cm-variable\">CookieRememberMeManager</span>();</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">cookieRememberMeManager</span>.<span class=\"cm-variable\">setCookie</span>(<span class=\"cm-variable\">rememberMeCookie</span>());</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">cookieRememberMeManager</span>.<span class=\"cm-variable\">setCipherKey</span>(<span class=\"cm-variable\">Base64</span>.<span class=\"cm-variable\">decode</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"4BxVhuFKUs0KTA3Kprsdag==\"</span>));</span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">cookieRememberMeManager</span>;</span> <span>}</span> <span><span></span></span> <span><span class=\"cm-meta\" style=\"color:#B7B3B3;\">@Bean</span></span> <span><span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-variable\">SimpleCookie</span> <span class=\"cm-def\" style=\"color:#8D8DF0;\">rememberMeCookie</span>(){</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">SimpleCookie</span> <span class=\"cm-variable\">simpleCookie</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\" style=\"color:#C88FD0;\">new</span> <span class=\"cm-variable\">SimpleCookie</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"rememberMe\"</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">simpleCookie</span>.<span class=\"cm-variable\">setHttpOnly</span>(<span class=\"cm-atom\" style=\"color:#84B6CB;\">true</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">simpleCookie</span>.<span class=\"cm-variable\">setPath</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/\"</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">simpleCookie</span>.<span class=\"cm-variable\">setMaxAge</span>(<span class=\"cm-number\" style=\"color:#64AB8F;\">259200</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">simpleCookie</span>;</span> <span>}</span></pre>\r\n<p class=\"md-end-block md-p\" style=\"color:#B8BFC6;font-family:&quot;font-size:16px;\">\r\n	<span class=\"md-plain\">需要说明的是：</span>\r\n</p>\r\n<ul class=\"ul-list\" style=\"color:#B8BFC6;font-family:&quot;font-size:16px;\">\r\n	<li class=\"md-list-item\">\r\n		<p class=\"md-end-block md-p\">\r\n			<span class=\"md-plain\">如果是用户正常登录</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>subject.isRemembered()==false</span> <span>subject.isAuthenticated()==true</span></pre>\r\n<ul class=\"ul-list\" style=\"color:#B8BFC6;font-family:&quot;font-size:16px;\">\r\n	<li class=\"md-list-item\">\r\n		<p class=\"md-end-block md-p\">\r\n			<span class=\"md-plain\">如果是通过记住我登录</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>subject.isRemembered()==true</span> <span>subject.isAuthenticated()==false</span></pre>\r\n<p class=\"md-end-block md-p\" style=\"color:#B8BFC6;font-family:&quot;font-size:16px;\">\r\n	<span class=\"md-plain\">另外对于拦截器的配置：</span>\r\n</p>\r\n<ul class=\"ul-list\" style=\"color:#B8BFC6;font-family:&quot;font-size:16px;\">\r\n	<li class=\"md-list-item\">\r\n		<p class=\"md-end-block md-p\">\r\n			<span class=\"md-plain\">authc：所有的url都不许，认证通过后才可以访问</span>\r\n		</p>\r\n	</li>\r\n	<li class=\"md-list-item\">\r\n		<p class=\"md-end-block md-p\">\r\n			<span class=\"md-plain\">anon：所有的url都可以匿名访问</span>\r\n		</p>\r\n	</li>\r\n	<li class=\"md-list-item\">\r\n		<p class=\"md-end-block md-p\">\r\n			<span class=\"md-plain\">user：表示记住我或认证通过才可以访问</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p class=\"md-end-block md-p\" style=\"color:#B8BFC6;font-family:&quot;font-size:16px;\">\r\n	<span class=\"md-plain\">如果你开启了记住我的选项，需要使用 user 进行拦截。</span>\r\n</p>\r\n<p class=\"md-end-block md-p md-focus\" style=\"color:#B8BFC6;font-family:&quot;font-size:16px;\">\r\n	<span class=\"md-plain\">地址：gitee.com/52itstyle/SPTools</span>\r\n</p>', '0', '2021-03-15 17:51:39', '/images/icon_m.jpg', 'Stefan', 1, 0, 0, 'SpringBoot2 + Shiro 框架实现自动登录功能');
INSERT INTO `user_content` VALUES (30, 2, 'SpringBoot -Redis', '工作梦', '<h2 class=\"md-end-block md-heading\" style=\"font-size:1.63rem;font-family:&quot;color:#DEDEDE;\">\r\n	<span class=\"md-plain\">SpringBoot -Redis</span>\r\n</h2>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span class=\"cm-tab-wrap-hack\"><span class=\"cm-comment\" style=\"color:#DA924A;\">&lt;!--导入连接池<span class=\"cm-tab\" style=\"font-family:var(--monospace);\"> </span>Lettuce连接池--&gt;</span></span> <span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">dependency</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">groupId</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span>org.apache.commons<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">groupId</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">artifactId</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span>commons-pool2<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">artifactId</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">dependency</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span><span class=\"cm-comment\" style=\"color:#DA924A;\">&lt;!--redis依赖配置--&gt;</span></span> <span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">dependency</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">groupId</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span>org.springframework.boot<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">groupId</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">artifactId</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span>spring-boot-starter-data-redis<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">artifactId</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">dependency</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span class=\"cm-tab-wrap-hack\"><span class=\"cm-comment\" style=\"color:#DA924A;\">#<span class=\"cm-tab\" style=\"font-family:var(--monospace);\"> </span>properties 中的redis配置</span></span> <span><span class=\"cm-def\" style=\"color:#8D8DF0;\">logging.level.com.xkcoding</span>=<span class=\"cm-quote\" style=\"color:#57AC57;\">debug</span></span> <span><span class=\"cm-def\" style=\"color:#8D8DF0;\">spring.redis.host</span>=<span class=\"cm-quote\" style=\"color:#57AC57;\">localhost</span></span> <span><span class=\"cm-def\" style=\"color:#8D8DF0;\">spring.redis.timeout</span>=<span class=\"cm-quote\" style=\"color:#57AC57;\">10000ms</span></span> <span><span class=\"cm-def\" style=\"color:#8D8DF0;\">spring.redis.lettuce.pool.max-active</span>=<span class=\"cm-quote\" style=\"color:#57AC57;\">8</span></span> <span><span class=\"cm-def\" style=\"color:#8D8DF0;\">spring.redis.lettuce.pool.max-wait</span>=<span class=\"cm-quote\" style=\"color:#57AC57;\">-1ms</span></span> <span><span class=\"cm-def\" style=\"color:#8D8DF0;\">spring.redis.lettuce.pool.max-idle</span>=<span class=\"cm-quote\" style=\"color:#57AC57;\">8</span></span> <span><span class=\"cm-def\" style=\"color:#8D8DF0;\">spring.redis.lettuce.pool.min-idle</span>=<span class=\"cm-quote\" style=\"color:#57AC57;\">0</span></span> <span><span class=\"cm-def\" style=\"color:#8D8DF0;\">spring.cache.type</span>=<span class=\"cm-quote\" style=\"color:#57AC57;\">redis</span></span> <span class=\"cm-tab-wrap-hack\"><span class=\"cm-comment\" style=\"color:#DA924A;\">#<span class=\"cm-tab\" style=\"font-family:var(--monospace);\"> </span>yml 中redis配置</span></span> <span><span class=\"cm-def\" style=\"color:#8D8DF0;\">spring</span>:</span> <span><span class=\"cm-def\" style=\"color:#8D8DF0;\"> redis</span>:</span> <span><span class=\"cm-def\" style=\"color:#8D8DF0;\"> &nbsp;  host</span>:<span class=\"cm-quote\" style=\"color:#57AC57;\"> 192.168.6.139 # Redis服务器地址</span></span> <span><span class=\"cm-def\" style=\"color:#8D8DF0;\"> &nbsp;  database</span>:<span class=\"cm-quote\" style=\"color:#57AC57;\"> 0 # Redis数据库索引（默认为0）</span></span> <span><span class=\"cm-def\" style=\"color:#8D8DF0;\"> &nbsp;  port</span>:<span class=\"cm-quote\" style=\"color:#57AC57;\"> 6379 # Redis服务器连接端口</span></span> <span><span class=\"cm-def\" style=\"color:#8D8DF0;\"> &nbsp;  password</span>:<span class=\"cm-quote\" style=\"color:#57AC57;\"> # Redis服务器连接密码（默认为空）</span></span> <span><span class=\"cm-def\" style=\"color:#8D8DF0;\"> &nbsp;  timeout</span>:<span class=\"cm-quote\" style=\"color:#57AC57;\"> 1000ms # 连接超时时间</span></span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span class=\"cm-tab-wrap-hack\"><span class=\"cm-comment\" style=\"color:#DA924A;\">//<span class=\"cm-tab\" style=\"font-family:var(--monospace);\"> </span>使用redis 需要建立reidsconfig，springboot才能使用redisTemplate模板</span></span> <span><span class=\"cm-comment\" style=\"color:#DA924A;\">// 开启redis缓存功能</span></span> <span><span class=\"cm-meta\" style=\"color:#B7B3B3;\">@EnableCaching</span></span> <span><span class=\"cm-comment\" style=\"color:#DA924A;\">// 备注这是一个配置类</span></span> <span><span class=\"cm-meta\" style=\"color:#B7B3B3;\">@Configuration</span></span> <span><span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-keyword\" style=\"color:#C88FD0;\">class</span> <span class=\"cm-def\" style=\"color:#8D8DF0;\">RedisConfig</span> <span class=\"cm-keyword\" style=\"color:#C88FD0;\">extends</span> <span class=\"cm-variable\">CachingConfigurerSupport</span> {</span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 配置redis模板文件</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param redisConnectionFactory</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @return</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-meta\" style=\"color:#B7B3B3;\">@Bean</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-variable\">RedisTemplate</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span>, <span class=\"cm-variable-3\" style=\"color:#1CC685;\">Object</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">redisTemplate</span>(<span class=\"cm-variable\">RedisConnectionFactory</span> <span class=\"cm-variable\">redisConnectionFactory</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">RedisSerializer</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\" style=\"color:#1CC685;\">Object</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">serializer</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">redisSerializer</span>();</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">// 创建RedisTemplate&lt;String, Object&gt;对象</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">RedisTemplate</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span>, <span class=\"cm-variable-3\" style=\"color:#1CC685;\">Object</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">redisTemplate</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\" style=\"color:#C88FD0;\">new</span> <span class=\"cm-variable\">RedisTemplate</span><span class=\"cm-operator\">&lt;&gt;</span>();</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">// 配置连接工厂</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">setConnectionFactory</span>(<span class=\"cm-variable\">redisConnectionFactory</span>);</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">// redis key 序列化方式使用stringSerial</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">setKeySerializer</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">new</span> <span class=\"cm-variable\">StringRedisSerializer</span>());</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">// redis value 序列化方式使用jackson</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">setValueSerializer</span>(<span class=\"cm-variable\">serializer</span>);</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">// redis hash key 序列化方式使用stringSerial</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">setHashKeySerializer</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">new</span> <span class=\"cm-variable\">StringRedisSerializer</span>());</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">// redis hash value 序列化方式使用jackson</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">setHashValueSerializer</span>(<span class=\"cm-variable\">serializer</span>);</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">afterPropertiesSet</span>();</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">redisTemplate</span>;</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 配置序列化</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @return</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-meta\" style=\"color:#B7B3B3;\">@Bean</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-variable\">RedisSerializer</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\" style=\"color:#1CC685;\">Object</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">redisSerializer</span>() {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">// 定义Jackson2JsonRedisSerializer序列化对象，转换成json格式，否则图形化界面呈现乱码</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">Jackson2JsonRedisSerializer</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\" style=\"color:#1CC685;\">Object</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">serializer</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\" style=\"color:#C88FD0;\">new</span> <span class=\"cm-variable\">Jackson2JsonRedisSerializer</span><span class=\"cm-operator\">&lt;&gt;</span>(<span class=\"cm-variable-3\" style=\"color:#1CC685;\">Object</span>.<span class=\"cm-keyword\" style=\"color:#C88FD0;\">class</span>);</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">ObjectMapper</span> <span class=\"cm-variable\">objectMapper</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\" style=\"color:#C88FD0;\">new</span> <span class=\"cm-variable\">ObjectMapper</span>();</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">// 指定要序列化的域，field,get和set,以及修饰符范围，ANY是都有包括private和public</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">objectMapper</span>.<span class=\"cm-variable\">setVisibility</span>(<span class=\"cm-variable\">PropertyAccessor</span>.<span class=\"cm-variable\">ALL</span>, <span class=\"cm-variable\">JsonAutoDetect</span>.<span class=\"cm-variable\">Visibility</span>.<span class=\"cm-variable\">ANY</span>);</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">// 指定序列化输入的类型，类必须是非final修饰的，final修饰的类，比如String,Integer等会报异常</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">objectMapper</span>.<span class=\"cm-variable\">enableDefaultTyping</span>(<span class=\"cm-variable\">ObjectMapper</span>.<span class=\"cm-variable\">DefaultTyping</span>.<span class=\"cm-variable\">NON_FINAL</span>);</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">serializer</span>.<span class=\"cm-variable\">setObjectMapper</span>(<span class=\"cm-variable\">objectMapper</span>);</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">serializer</span>;</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 自定义缓存管理器</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param redisConnectionFactory</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @return</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-meta\" style=\"color:#B7B3B3;\">@Bean</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-variable\">RedisCacheManager</span> <span class=\"cm-variable\">redisCacheManager</span>(<span class=\"cm-variable\">RedisConnectionFactory</span> <span class=\"cm-variable\">redisConnectionFactory</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">RedisCacheWriter</span> <span class=\"cm-variable\">redisCacheWriter</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">RedisCacheWriter</span>.<span class=\"cm-variable\">nonLockingRedisCacheWriter</span>(<span class=\"cm-variable\">redisConnectionFactory</span>);</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">RedisCacheConfiguration</span> <span class=\"cm-variable\">redisCacheConfiguration</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">RedisCacheConfiguration</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  .<span class=\"cm-variable\">defaultCacheConfig</span>()</span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">// 设置value 为自动转json的Object</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .<span class=\"cm-variable\">serializeValuesWith</span>(<span class=\"cm-variable\">RedisSerializationContext</span>.<span class=\"cm-variable\">SerializationPair</span>.<span class=\"cm-variable\">fromSerializer</span>(<span class=\"cm-variable\">redisSerializer</span>()))</span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">// 缓存有效期为一天</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  .<span class=\"cm-variable\">entryTtl</span>(<span class=\"cm-variable\">Duration</span>.<span class=\"cm-variable\">ofDays</span>(<span class=\"cm-number\" style=\"color:#64AB8F;\">1</span>));</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-keyword\" style=\"color:#C88FD0;\">new</span> <span class=\"cm-variable\">RedisCacheManager</span>(<span class=\"cm-variable\">redisCacheWriter</span>, <span class=\"cm-variable\">redisCacheConfiguration</span>);</span> <span> &nbsp;  }</span> <span><span></span></span> <span>}</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span class=\"cm-tab-wrap-hack\"><span class=\"cm-comment\" style=\"color:#DA924A;\">//<span class=\"cm-tab\" style=\"font-family:var(--monospace);\"> </span>常用注解</span></span> <span><span class=\"cm-meta\" style=\"color:#B7B3B3;\">@Cacheable</span>(<span class=\"cm-variable\">value</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\" style=\"color:#D26B6B;\">\"user\"</span>, <span class=\"cm-variable\">key</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\" style=\"color:#D26B6B;\">\"#id\"</span>)</span> <span><span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-variable\">User</span> <span class=\"cm-def\" style=\"color:#8D8DF0;\">getUserById</span>(<span class=\"cm-variable-3\" style=\"color:#1CC685;\">Long</span> <span class=\"cm-variable\">id</span>) {</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">User</span> <span class=\"cm-variable\">user</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">DATABASES</span>.<span class=\"cm-variable\">get</span>(<span class=\"cm-variable\">id</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">log</span>.<span class=\"cm-variable\">info</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"获取用户id\"</span> <span class=\"cm-operator\">+</span> <span class=\"cm-variable\">id</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">user</span>;</span> <span>}</span> <span class=\"cm-tab-wrap-hack\"><span class=\"cm-comment\" style=\"color:#DA924A;\">// <span class=\"cm-tab\" style=\"font-family:var(--monospace);\"> </span>@Cacheable</span></span> <span><span class=\"cm-variable\">使用该注解的方法当缓存存在时，会从缓存中获取数据而不执行方法，当缓存不存在时，会执行方法并把返回结果存入缓存中。</span></span> <span><span class=\"cm-variable\">属性：</span></span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">value：缓存名称（必填）指定缓存的命名空间</span></span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">key：用于设置再命名空间中缓存key的值，可以使用SpEl表达式，会自行组合（如果不指定）</span></span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">unless：天剑不符合不缓存</span></span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">condition：条件符合缓存</span> &nbsp; &nbsp;</span> <span><span class=\"cm-comment\" style=\"color:#DA924A;\">//执行这个方法的时候，会先去redis中，根据ceshi::user:id(这个id就是前段传来的id)作为key去查找，如果找到直接返回redis中的数据,如果没有找到就执行该方法，由于unless属性，当返回结果为空就不存入redis中，这里的result是固定写法，指的就是当前返回值User,当不指定key的时候，就会以方法名作为key，这里就是以id作为key。</span></span> <span> &nbsp; &nbsp;</span> <span> &nbsp; &nbsp;</span> <span><span class=\"cm-meta\" style=\"color:#B7B3B3;\">@CachePut</span>(<span class=\"cm-variable\">value</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\" style=\"color:#D26B6B;\">\"user\"</span>, <span class=\"cm-variable\">key</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\" style=\"color:#D26B6B;\">\"#user.id\"</span>)</span> <span><span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-variable\">User</span> <span class=\"cm-def\" style=\"color:#8D8DF0;\">saveUser</span>(<span class=\"cm-variable\">User</span> <span class=\"cm-variable\">user</span>) {</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">DATABASES</span>.<span class=\"cm-variable\">put</span>(<span class=\"cm-variable\">user</span>.<span class=\"cm-variable\">getId</span>(), <span class=\"cm-variable\">user</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">log</span>.<span class=\"cm-variable\">info</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"保存用户\"</span> <span class=\"cm-operator\">+</span> <span class=\"cm-variable\">user</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">user</span>;</span> <span>}</span> <span class=\"cm-tab-wrap-hack\"><span class=\"cm-comment\" style=\"color:#DA924A;\">//<span class=\"cm-tab\" style=\"font-family:var(--monospace);\"> </span>@CachePut</span></span> <span><span class=\"cm-variable\">使用该注解的方法每次执行时都会把返回结果存入缓存中。</span></span> <span> &nbsp; &nbsp;</span> <span><span class=\"cm-meta\" style=\"color:#B7B3B3;\">@CacheEvict</span>(<span class=\"cm-variable\">value</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\" style=\"color:#D26B6B;\">\"user\"</span>, <span class=\"cm-variable\">key</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\" style=\"color:#D26B6B;\">\"#id\"</span>)</span> <span><span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">void</span> <span class=\"cm-def\" style=\"color:#8D8DF0;\">delUser</span>(<span class=\"cm-variable-3\" style=\"color:#1CC685;\">int</span> <span class=\"cm-variable\">id</span>) {</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">DATABASES</span>.<span class=\"cm-variable\">remove</span>(<span class=\"cm-variable\">id</span>);</span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">log</span>.<span class=\"cm-variable\">info</span>(<span class=\"cm-string\" style=\"color:#D26B6B;\">\"删除id为 \"</span> <span class=\"cm-operator\">+</span> <span class=\"cm-variable\">id</span> <span class=\"cm-operator\">+</span> <span class=\"cm-string\" style=\"color:#D26B6B;\">\" 的用户\"</span>);</span> <span>}</span> <span class=\"cm-tab-wrap-hack\"><span class=\"cm-comment\" style=\"color:#DA924A;\">//<span class=\"cm-tab\" style=\"font-family:var(--monospace);\"> </span>@CacheEvict</span></span> <span><span class=\"cm-variable\">使用该注解的方法执行时能够根据一定的条件对缓存进行清空</span></span> <span><span class=\"cm-variable\">属性：</span></span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">allEntries</span>:<span class=\"cm-variable\">是否清空所有缓存，默认为false</span></span> <span> &nbsp; &nbsp;<span class=\"cm-variable\">beforeInvocation：是否在方法执行之前就清空，默认为false，默认的情况下，方法出现异常并不会清空缓存</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp;</span></pre>\r\n<h3 class=\"md-end-block md-heading\" style=\"font-size:1.17rem;font-family:&quot;color:#DEDEDE;\">\r\n	<span class=\"md-plain\">Redis 工具类</span>\r\n</h3>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span class=\"cm-tab-wrap-hack\"><span class=\"cm-comment\" style=\"color:#DA924A;\">//<span class=\"cm-tab\" style=\"font-family:var(--monospace);\"> </span>做一些特定的信息缓存</span></span> <span><span></span></span> <span><span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> <span class=\"cm-comment\" style=\"color:#DA924A;\">* spring redis 工具类</span></span> <span> <span class=\"cm-comment\" style=\"color:#DA924A;\">**/</span></span> <span><span class=\"cm-meta\" style=\"color:#B7B3B3;\">@Component</span></span> <span><span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-keyword\" style=\"color:#C88FD0;\">class</span> <span class=\"cm-def\" style=\"color:#8D8DF0;\">RedisCache</span> {</span> <span> &nbsp; &nbsp;</span> <span> &nbsp; &nbsp;<span class=\"cm-meta\" style=\"color:#B7B3B3;\">@Autowired</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-variable\">RedisTemplate</span> <span class=\"cm-variable\">redisTemplate</span>;</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 缓存基本的对象，Integer、String、实体类等</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param key &nbsp; 缓存的键值</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param value 缓存的值</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">void</span> <span class=\"cm-variable\">setCacheObject</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">key</span>, <span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable\">T</span> <span class=\"cm-variable\">value</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">opsForValue</span>().<span class=\"cm-variable\">set</span>(<span class=\"cm-variable\">key</span>, <span class=\"cm-variable\">value</span>);</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 缓存基本的对象，Integer、String、实体类等</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param key &nbsp; &nbsp;  缓存的键值</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param value &nbsp;  缓存的值</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param timeout  时间</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param timeUnit 时间颗粒度</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">void</span> <span class=\"cm-variable\">setCacheObject</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">key</span>, <span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable\">T</span> <span class=\"cm-variable\">value</span>, <span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">Integer</span> <span class=\"cm-variable\">timeout</span>, <span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable\">TimeUnit</span> <span class=\"cm-variable\">timeUnit</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">opsForValue</span>().<span class=\"cm-variable\">set</span>(<span class=\"cm-variable\">key</span>, <span class=\"cm-variable\">value</span>, <span class=\"cm-variable\">timeout</span>, <span class=\"cm-variable\">timeUnit</span>);</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 设置有效时间</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param key &nbsp; &nbsp; Redis键</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param timeout 超时时间</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @return true=设置成功；false=设置失败</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">boolean</span> <span class=\"cm-variable\">expire</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">key</span>, <span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">long</span> <span class=\"cm-variable\">timeout</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">expire</span>(<span class=\"cm-variable\">key</span>, <span class=\"cm-variable\">timeout</span>, <span class=\"cm-variable\">TimeUnit</span>.<span class=\"cm-variable\">SECONDS</span>);</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 设置有效时间</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param key &nbsp; &nbsp; Redis键</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param timeout 超时时间</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param unit &nbsp;  时间单位</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @return true=设置成功；false=设置失败</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">boolean</span> <span class=\"cm-variable\">expire</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">key</span>, <span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">long</span> <span class=\"cm-variable\">timeout</span>, <span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable\">TimeUnit</span> <span class=\"cm-variable\">unit</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">expire</span>(<span class=\"cm-variable\">key</span>, <span class=\"cm-variable\">timeout</span>, <span class=\"cm-variable\">unit</span>);</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 获得缓存的基本对象。</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param key 缓存键值</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @return 缓存键值对应的数据</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">T</span> <span class=\"cm-variable\">getCacheObject</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">key</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">ValueOperations</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span>, <span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">operation</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">opsForValue</span>();</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">operation</span>.<span class=\"cm-variable\">get</span>(<span class=\"cm-variable\">key</span>);</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 删除单个对象</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param key</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">boolean</span> <span class=\"cm-variable\">deleteObject</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">key</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">delete</span>(<span class=\"cm-variable\">key</span>);</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 删除集合对象</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param collection 多个对象</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @return</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">long</span> <span class=\"cm-variable\">deleteObject</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable\">Collection</span> <span class=\"cm-variable\">collection</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">delete</span>(<span class=\"cm-variable\">collection</span>);</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 缓存List数据</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param key &nbsp;  缓存的键值</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param values 待缓存的List数据</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @return 缓存的对象</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">long</span> <span class=\"cm-variable\">setCacheList</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">key</span>, <span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable\">List</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">dataList</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\" style=\"color:#1CC685;\">Long</span> <span class=\"cm-variable\">count</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">opsForList</span>().<span class=\"cm-variable\">rightPushAll</span>(<span class=\"cm-variable\">key</span>, <span class=\"cm-variable\">dataList</span>);</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">count</span> <span class=\"cm-operator\">==</span> <span class=\"cm-atom\" style=\"color:#84B6CB;\">null</span> <span class=\"cm-operator\">?</span> <span class=\"cm-number\" style=\"color:#64AB8F;\">0</span> : <span class=\"cm-variable\">count</span>;</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 获得缓存的list对象</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param key 缓存的键值</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @return 缓存键值对应的数据</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">List</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">getCacheList</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">key</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">opsForList</span>().<span class=\"cm-variable\">range</span>(<span class=\"cm-variable\">key</span>, <span class=\"cm-number\" style=\"color:#64AB8F;\">0</span>, <span class=\"cm-operator\">-</span><span class=\"cm-number\" style=\"color:#64AB8F;\">1</span>);</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 缓存Set</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param key &nbsp; &nbsp; 缓存键值</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param dataSet 缓存的数据</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @return 缓存数据的对象</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">long</span> <span class=\"cm-variable\">setCacheSet</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">key</span>, <span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable\">Set</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">dataSet</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\" style=\"color:#1CC685;\">Long</span> <span class=\"cm-variable\">count</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">opsForSet</span>().<span class=\"cm-variable\">add</span>(<span class=\"cm-variable\">key</span>, <span class=\"cm-variable\">dataSet</span>);</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">count</span> <span class=\"cm-operator\">==</span> <span class=\"cm-atom\" style=\"color:#84B6CB;\">null</span> <span class=\"cm-operator\">?</span> <span class=\"cm-number\" style=\"color:#64AB8F;\">0</span> : <span class=\"cm-variable\">count</span>;</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 获得缓存的set</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param key</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @return</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">Set</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">getCacheSet</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">key</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">opsForSet</span>().<span class=\"cm-variable\">members</span>(<span class=\"cm-variable\">key</span>);</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 缓存Map</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param key</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param dataMap</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">void</span> <span class=\"cm-variable\">setCacheMap</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">key</span>, <span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable\">Map</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span>, <span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">dataMap</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">if</span> (<span class=\"cm-variable\">dataMap</span> <span class=\"cm-operator\">!=</span> <span class=\"cm-atom\" style=\"color:#84B6CB;\">null</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">opsForHash</span>().<span class=\"cm-variable\">putAll</span>(<span class=\"cm-variable\">key</span>, <span class=\"cm-variable\">dataMap</span>);</span> <span> &nbsp; &nbsp; &nbsp;  }</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 获得缓存的Map</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param key</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @return</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">Map</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span>, <span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">getCacheMap</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">key</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">opsForHash</span>().<span class=\"cm-variable\">entries</span>(<span class=\"cm-variable\">key</span>);</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 往Hash中存入数据</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param key &nbsp; Redis键</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param hKey  Hash键</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param value 值</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">void</span> <span class=\"cm-variable\">setCacheMapValue</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">key</span>, <span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">hKey</span>, <span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable\">T</span> <span class=\"cm-variable\">value</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">opsForHash</span>().<span class=\"cm-variable\">put</span>(<span class=\"cm-variable\">key</span>, <span class=\"cm-variable\">hKey</span>, <span class=\"cm-variable\">value</span>);</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 获取Hash中的数据</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param key  Redis键</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param hKey Hash键</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @return Hash中的对象</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">T</span> <span class=\"cm-variable\">getCacheMapValue</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">key</span>, <span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">hKey</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">HashOperations</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span>, <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span>, <span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">opsForHash</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">opsForHash</span>();</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">opsForHash</span>.<span class=\"cm-variable\">get</span>(<span class=\"cm-variable\">key</span>, <span class=\"cm-variable\">hKey</span>);</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 获取多个Hash中的数据</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param key &nbsp; Redis键</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param hKeys Hash键集合</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @return Hash对象集合</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">List</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">getMultiCacheMapValue</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">key</span>, <span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable\">Collection</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\" style=\"color:#1CC685;\">Object</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">hKeys</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">opsForHash</span>().<span class=\"cm-variable\">multiGet</span>(<span class=\"cm-variable\">key</span>, <span class=\"cm-variable\">hKeys</span>);</span> <span> &nbsp;  }</span> <span><span></span></span> <span> &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">/**</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* 获得缓存的基本对象列表</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @param pattern 字符串前缀</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">* @return 对象列表</span></span> <span> &nbsp; &nbsp; <span class=\"cm-comment\" style=\"color:#DA924A;\">*/</span></span> <span> &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-variable\">Collection</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">keys</span>(<span class=\"cm-keyword\" style=\"color:#C88FD0;\">final</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">String</span> <span class=\"cm-variable\">pattern</span>) {</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">return</span> <span class=\"cm-variable\">redisTemplate</span>.<span class=\"cm-variable\">keys</span>(<span class=\"cm-variable\">pattern</span>);</span> <span> &nbsp;  }</span> <span> &nbsp; &nbsp;</span> <span>}</span></pre>\r\n<h2 class=\"md-end-block md-heading md-focus\" style=\"font-size:1.63rem;font-family:&quot;color:#DEDEDE;\">\r\n	<br />\r\n</h2>', '0', '2021-03-16 09:57:35', '/images/icon_m.jpg', 'Stefan', 1, 0, 0, 'redis 作为缓存的基本用法');
INSERT INTO `user_content` VALUES (31, 2, '和马退赛', '其他梦', '<p>\r\n	<img src=\"http://chuantu.xyz/t6/741/1615860188x209669490.png\" alt=\"\" />\r\n</p>\r\n<p>\r\n	这是什么神仙颜值，鹅厂竟让其退赛，就因为别人过于优秀？\r\n</p>', '0', '2021-03-16 10:05:27', '/images/icon_m.jpg', 'Stefan', 1, 0, 0, '鹅厂内定出道人选，逼迫和马退出创造营，套路太深');
INSERT INTO `user_content` VALUES (32, 2, '米卡米卡', '其他梦', '<p>\r\n	<img src=\"/images/image/20210316/20210316140137_218.jpg\" alt=\"\" />\r\n</p>\r\n<p>\r\n	<strong><span style=\"color:#FF9900;\">你一票我一票，米卡随时能出道</span></strong>\r\n</p>', '0', '2021-03-16 14:02:25', '/images/image/20210316/20210316140103_54.png', 'Stefan', 1, 0, 0, '快来给米卡投票');
INSERT INTO `user_content` VALUES (33, 2, '文件上传', '工作梦', '<pre>&nbsp;&nbsp;&nbsp;&nbsp;ServletContext application = request.getSession().getServletContext()<span style=\"color:#cc7832;\">; </span></pre>\r\n<pre>&nbsp;&nbsp;&nbsp;&nbsp;String savePath1 = application.getRealPath(<span style=\"color:#6a8759;\">\"/\"</span>) + <span style=\"color:#6a8759;\">\"images/\"</span><span style=\"color:#cc7832;\">;</span></pre>\r\n<pre><span style=\"color:#cc7832;\">使用上诉代码，如果在properties中没有配置，则会获取tomcat的虚拟路径，C:\\Users\\fyu\\AppData\\Local\\Temp\\tomcat.8080.823325050883988976，类似于这种的</span></pre>\r\n<pre><span style=\"color:#cc7832;\">当然，可以在properties文件中配置，\r\n<pre><span style=\"color:#cc7832;\">spring.thymeleaf.static-location</span><span style=\"color:#808080;\">=</span><span style=\"color:#6a8759;\">classpath:/static/,file:static/</span></pre>\r\n并且需要创建配置文件，配置页面解析文件路径的配置<span style=\"color:#E53333;\"></span></span></pre>\r\n<pre><span style=\"color:#cc7832;\">package com.stefan.blog.config;\r\n\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;\r\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\r\n\r\n@Configuration\r\npublic class WebMvcConfig implements WebMvcConfigurer {\r\n\r\n&nbsp; &nbsp; @Override\r\n&nbsp; &nbsp; public void addResourceHandlers(ResourceHandlerRegistry registry) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; registry.addResourceHandler(\"/images/**\").addResourceLocations(\"file:D:\\\\TestProject\\\\MyBlog\\\\Stefan_Blog\\\\src\\\\main\\\\resources\\\\static\\\\images\\\\\");\r\n&nbsp; &nbsp; }\r\n} </span></pre>\r\n<pre><span>前端页面使用  th:src=@{${imgUrl}} 获取路径信息</span></pre>', '0', '2021-03-16 14:24:38', '/images/image/20210316/20210316141604_708.jpg', 'Stefan', 1, 0, 0, 'springboot内置tomcat，造成虚拟路径的解决');
INSERT INTO `user_content` VALUES (34, 2, 'Thymeleaf分页实现', '工作梦', '<h4 class=\"md-end-block md-heading\" style=\"font-size:1.12rem;font-family:&quot;font-weight:normal;color:white;\">\r\n	<span class=\"md-plain\">SpringMVC 拦截器的实现原理</span>\r\n</h4>\r\n<p class=\"md-end-block md-p\" style=\"color:#B8BFC6;font-family:&quot;font-size:16px;\">\r\n	<span class=\"md-plain\">1、首先得了解SpringMVC的一个请求流程</span>\r\n</p>\r\n<ol class=\"ol-list\" style=\"color:#B8BFC6;font-family:&quot;font-size:16px;\">\r\n	<li class=\"md-list-item\">\r\n		<p class=\"md-end-block md-p\">\r\n			<span class=\"md-plain\">用户发送请求，通过dispatchServlet将URL交给处理器映射器HandlerMapping处理</span>\r\n		</p>\r\n	</li>\r\n	<li class=\"md-list-item\">\r\n		<p class=\"md-end-block md-p\">\r\n			<span class=\"md-plain\">处理器映射器将url对应到相应的controller（其中就有可能包括拦截器）</span>\r\n		</p>\r\n	</li>\r\n	<li class=\"md-list-item\">\r\n		<p class=\"md-end-block md-p\">\r\n			<span class=\"md-plain\">controller将寻找对应的处理器适配器 HandlerAdapter通过代码进行相应的处理，并且返回一个ModelAndView对象</span>\r\n		</p>\r\n	</li>\r\n	<li class=\"md-list-item\">\r\n		<p class=\"md-end-block md-p\">\r\n			<span class=\"md-plain\">前端控制器又将这个ModelAndView对象交给视图解析器处理，将其拆分成Model和View对象，将model渲染在View上，最后显示在页面上。</span>\r\n		</p>\r\n	</li>\r\n</ol>\r\n<h4 class=\"md-end-block md-heading\" style=\"font-size:1.12rem;font-family:&quot;font-weight:normal;color:white;\">\r\n	<span class=\"md-plain\">SpringMvc拦截器</span>\r\n</h4>\r\n<p class=\"md-end-block md-p\" style=\"color:#B8BFC6;font-family:&quot;font-size:16px;\">\r\n	<span class=\"md-plain\">作用类似于Servlet中的Filter，用于在处理器之前和之后的预处理</span>\r\n</p>\r\n<p class=\"md-end-block md-p\" style=\"color:#B8BFC6;font-family:&quot;font-size:16px;\">\r\n	<span class=\"md-plain\">SpringMVC自定义拦截器使用步骤：</span>\r\n</p>\r\n<ol class=\"ol-list\" style=\"color:#B8BFC6;font-family:&quot;font-size:16px;\">\r\n	<li class=\"md-list-item\">\r\n		<p class=\"md-end-block md-p\">\r\n			<span class=\"md-plain\">创建一个类实现HandlerInterceptor接口，重写接口中的三个方法</span>\r\n		</p>\r\n		<ul class=\"ul-list\">\r\n			<li class=\"md-list-item\">\r\n				<p class=\"md-end-block md-p\">\r\n					<span class=\"md-plain\">preHandler：在调用处理器之前调用该方法，方法请求成功返回true才会向下继续执行</span>\r\n				</p>\r\n			</li>\r\n			<li class=\"md-list-item\">\r\n				<p class=\"md-end-block md-p\">\r\n					<span class=\"md-plain\">postHandler：调用完处理器之后使用</span>\r\n				</p>\r\n			</li>\r\n			<li class=\"md-list-item\">\r\n				<p class=\"md-end-block md-p\">\r\n					<span class=\"md-plain\">afterCompletion：只要拦截器中的preHandler方法返回true，该方法就会被调用</span>\r\n				</p>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n</ol>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span><span></span></span> <span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">mvc:interceptors</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span> </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">mvc:interceptor</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> </span> <span> &nbsp; &nbsp; &nbsp;</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">mvc:mapping</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">path</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"/**\"</span> <span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">/&gt;</span><span class=\"cm-comment\" style=\"color:#DA924A;\">&lt;!-- 用于指定对拦截的 url --&gt;</span></span> <span> </span> <span> &nbsp; &nbsp; &nbsp;</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">mvc:exclude-mapping</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">path</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"\"</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">/&gt;</span><span class=\"cm-comment\" style=\"color:#DA924A;\">&lt;!-- 用于排除指定的 url--&gt;</span></span> <span> </span> <span> &nbsp; &nbsp; &nbsp; &nbsp;</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span> &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">&lt;!-- 使用指定的拦截器进行对指定的url进行拦截--&gt;</span></span> <span> </span> <span> &nbsp; &nbsp; &nbsp; &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">bean</span> &nbsp;<span class=\"cm-attribute\" style=\"color:#7575E4;\">id</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"handlerInterceptorDemo1\"</span> &nbsp;<span class=\"cm-attribute\" style=\"color:#7575E4;\">class</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"拦截器所对应的全限定类名\"</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">bean</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">mvc:interceptor</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> </pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">mvc:interceptors</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>防止SQL注入的集中方式</span> <span>1、使用PreparedStatement，将数据进行处理，不再对sql语句进行处理，从而避免了sql注入</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"> &nbsp;&nbsp;&nbsp;&nbsp;<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2、使用正则表达式</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"> &nbsp;&nbsp;&nbsp;&nbsp;<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3、mybatis中使用#{} 防止SQL注入</span> <span> 使用${}会直接参数sql语句的编译，而使用#{}时，只是进行预编译的状态，相当于使用PreparedStatement</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span><span class=\"cm-comment\" style=\"color:#DA924A;\">&lt;!-- 分页 --&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">nav</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">class</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"mt-5\"</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">th:if</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"${page.rows&gt;0}\"</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">ul</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">class</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"pagination justify-content-center\"</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">li</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">class</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"page-item\"</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">a</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">class</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"page-link\"</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">th:href</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"@{${page.path}(current=1)}\"</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span>首页<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">a</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">li</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">li</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">th:class</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"|page-item ${page.current==1?\'disabled\':\'\'}|\"</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">a</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">class</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"page-link\"</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">th:href</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"@{${page.path}(current=${page.current-1})}\"</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span>上一页<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">a</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">li</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">li</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">th:class</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"|page-item ${i==page.current?\'active\':\'\'}|\"</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-attribute\" style=\"color:#7575E4;\">th:each</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"i:${#numbers.sequence(page.from,page.to)}\"</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">a</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">class</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"page-link\"</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">th:href</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"@{${page.path}(current=${i})}\"</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">th:text</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"${i}\"</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span>1<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">a</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">li</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp;</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">li</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">th:class</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"|page-item ${page.current==page.total?\'disabled\':\'\'}|\"</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">a</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">class</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"page-link\"</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">th:href</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"@{${page.path}(current=${page.current+1})}\"</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span>下一页<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">a</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">li</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">li</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">class</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"page-item\"</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">a</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">class</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"page-link\"</span> <span class=\"cm-attribute\" style=\"color:#7575E4;\">th:href</span>=<span class=\"cm-string\" style=\"color:#D26B6B;\">\"@{${page.path}(current=${page.total})}\"</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span>末页<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">a</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">li</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">ul</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span> <span> &nbsp; &nbsp; &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp; &nbsp; &nbsp;<span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&lt;/</span><span class=\"cm-tag\" style=\"color:#7DF46A;\">nav</span><span class=\"cm-tag cm-bracket\" style=\"color:#999977;\">&gt;</span></span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span><span class=\"cm-variable\">自定义pageHelper和mybatis的插件使用优先级</span></span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span><span class=\"cm-meta\" style=\"color:#B7B3B3;\">@Configuration</span></span> </pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span><span class=\"cm-keyword\" style=\"color:#C88FD0;\">public</span> <span class=\"cm-keyword\" style=\"color:#C88FD0;\">class</span> <span class=\"cm-def\" style=\"color:#8D8DF0;\">PageHelperConfig</span> {</span> <span> &nbsp; &nbsp;</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span><span class=\"cm-meta\" style=\"color:#B7B3B3;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  @Autowired</span></span> <span> &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"cm-keyword\" style=\"color:#C88FD0;\">&nbsp;&nbsp;&nbsp;&nbsp;private</span> <span class=\"cm-variable\">List</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">SqlSessionFactory</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">sqlSessionFactoryList</span>;</span> <span><span></span></span> <span> &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"cm-meta\" style=\"color:#B7B3B3;\">&nbsp;&nbsp;&nbsp;&nbsp;@PostConstruct</span></span> <span> &nbsp; &nbsp;</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span><span class=\"cm-keyword\" style=\"color:#C88FD0;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public</span> <span class=\"cm-variable-3\" style=\"color:#1CC685;\">void</span> <span class=\"cm-variable\">addMySqlInterceptor</span>() {</span> <span> &nbsp; &nbsp; &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"cm-variable\">PageHelper</span> <span class=\"cm-variable\">interceptor</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\" style=\"color:#C88FD0;\">new</span> <span class=\"cm-variable\">PageHelper</span>();</span> <span> &nbsp; &nbsp; &nbsp; &nbsp;</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span><span class=\"cm-keyword\" style=\"color:#C88FD0;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for</span> (<span class=\"cm-variable\">SqlSessionFactory</span> <span class=\"cm-variable\">sqlSessionFactory</span> : <span class=\"cm-variable\">sqlSessionFactoryList</span>) {</span> <span><span></span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"cm-comment\" style=\"color:#DA924A;\">// 添加自定义属性</span></span> </pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span><span class=\"cm-comment\" style=\"color:#DA924A;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  Properties properties = new Properties();</span></span> </pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span><span class=\"cm-comment\" style=\"color:#DA924A;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  properties.setProperty(\"prop1\", \"value1\");</span></span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"> &nbsp;&nbsp;&nbsp;&nbsp;<span><span class=\"cm-comment\" style=\"color:#DA924A;\">// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  interceptor.setProperties(properties);</span></span> <span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"cm-tab\" style=\"font-family:var(--monospace);\"> </span><span class=\"cm-tab\" style=\"font-family:var(--monospace);\"> </span><span class=\"cm-tab\" style=\"font-family:var(--monospace);\"> </span><span class=\"cm-tab\" style=\"font-family:var(--monospace);\"> </span><span class=\"cm-tab\" style=\"font-family:var(--monospace);\"> </span> &nbsp; &nbsp; &nbsp;</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span><span class=\"cm-variable\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sqlSessionFactory</span>.<span class=\"cm-variable\">getConfiguration</span>().<span class=\"cm-variable\">addInterceptor</span>(<span class=\"cm-variable\">interceptor</span>); &nbsp; &nbsp; </span> <span> &nbsp; &nbsp; &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span> <span> &nbsp; </span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"> &nbsp;&nbsp;&nbsp;&nbsp;<span>}</span> <span><span></span></span> <span><span></span></span> </pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span><span class=\"cm-variable\">&nbsp;&nbsp;&nbsp;&nbsp;自定义主页过滤器</span></span> <span><span class=\"cm-meta\" style=\"color:#B7B3B3;\">@WebFilter</span></span> <span><span class=\"cm-variable\">在主启动器类上添加扫描</span><span class=\"cm-meta\" style=\"color:#B7B3B3;\">@ServletComponentScan</span></span></pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gt：great than（大于）&gt;</span> </pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ge：great equal（大于等于）&gt;=</span> </pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eq：equal（等于）==</span> </pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lt：less than（小于）&lt;</span> </pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;le：less equal（小于等于）&lt;=</span> </pre>\r\n<pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ne：not equal（不等于）!=</span></pre>\r\n<div>\r\n	<br />\r\n</div>', '0', '2021-03-16 14:32:35', '/images/image/20210316/20210316141604_708.jpg', 'Stefan', 0, 0, 0, '使用Thymeleaf提供的分页操作，以及选择使用分页插件的优先级');
INSERT INTO `user_content` VALUES (35, 2, 'Java01', '工作梦', '1.成员内部类<br />\r\n<br />\r\n（1）该类像是外部类的一个成员，可以无条件的访问外部类的所有成员属性和成员方法（包括private成员和静态成员）；<br />\r\n<br />\r\n（2）成员内部类拥有与外部类同名的成员变量时，会发生隐藏现象，即默认情况下访问的是成员内部类中的成员。如果要访问外部类中的成员，需要以下形式访问：【外部类.this.成员变量&nbsp; 或&nbsp; 外部类.this.成员方法】；<br />\r\n<br />\r\n（3）在外部类中如果要访问成员内部类的成员，必须先创建一个成员内部类的对象，再通过指向这个对象的引用来访问；<br />\r\n<br />\r\n（4）成员内部类是依附外部类而存在的，也就是说，如果要创建成员内部类的对象，前提是必须存在一个外部类的对象；<br />\r\n<br />\r\n（5）内部类可以拥有private访问权限、protected访问权限、public访问权限及包访问权限。如果成员内部类用private修饰，则只能在外部类的内部访问；如果用public修饰，则任何地方都能访问；如果用protected修饰，则只能在同一个包下或者继承外部类的情况下访问；如果是默认访问权限，则只能在同一个包下访问。外部类只能被public和包访问两种权限修饰。<br />\r\n<br />\r\n2.局部内部类<br />\r\n<br />\r\n（1）局部内部类是定义在一个方法或者一个作用域里面的类，它和成员内部类的区别在于局部内部类的访问仅限于方法内或者该作用域内；<br />\r\n<br />\r\n（2）局部内部类就像是方法里面的一个局部变量一样，是不能有public、protected、private以及static修饰符的。<br />\r\n<br />\r\n3.匿名内部类<br />\r\n<br />\r\n（1）一般使用匿名内部类的方法来编写事件监听代码；<br />\r\n<br />\r\n（2）匿名内部类是不能有访问修饰符和static修饰符的；<br />\r\n<br />\r\n（3）匿名内部类是唯一一种没有构造器的类；<br />\r\n<br />\r\n（4）匿名内部类用于继承其他类或是实现接口，并不需要增加额外的方法，只是对继承方法的实现或是重写。<br />\r\n<br />\r\n4.内部静态类<br />\r\n<br />\r\n（1）静态内部类是不需要依赖于外部类的，这点和类的静态成员属性有点类似；<br />\r\n<br />\r\n（2）不能使用外部类的非static成员变量或者方法。<br />\r\n<br />\r\n(1)把类定义在另一个类的内部，该类就被称为内部类。<br />\r\n举例：把类B定义在类A中，类B就被称为内部类。<br />\r\n(2)内部类的访问规则<br />\r\nA:可以直接访问外部类的成员，包括私有<br />\r\nB:外部类要想访问内部类成员，必须创建对象<br />\r\n(3)内部类的分类<br />\r\nA:成员内部类<br />\r\nB:局部内部类<br />\r\nC:匿名内部类<br />\r\n(4)成员内部类访问规则<br />\r\n成员内部类不是静态的：<br />\r\n外部类名.内部类名 对象名 = new 外部类名().new 内部类名();<br />\r\n成员内部类是静态的：<br />\r\n外部类名.内部类名 对象名 = new 外部类名.内部类名();<br />\r\n(5)局部内部类<br />\r\nA:局部内部类访问局部变量必须加final修饰。<br />\r\nB:为什么呢?<br />\r\n因为局部变量使用完毕就消失，而堆内存的数据并不会立即消失。<br />\r\n所以，堆内存还是用该变量，而改变量已经没有了。<br />\r\n为了让该值还存在，就加final修饰。<br />\r\n通过反编译工具我们看到了，加入final后，堆内存直接存储的是值，而不是变量名。<br />\r\n(6)匿名内部类(掌握)<br />\r\nA:是局部内部类的简化形式<br />\r\nB:前提<br />\r\n存在一个类或者接口<br />\r\nC:格式:<br />\r\nnew 类名或者接口名() {<br />\r\n重写方法;<br />\r\n}<br />\r\nD:本质：<br />\r\n其实是继承该类或者实现接口的子类匿名对象<br />\r\n<div>\r\n	<br />\r\n</div>', '0', '2021-03-16 14:34:46', '/images/image/20210316/20210316141604_708.jpg', 'Stefan', 1, 0, 0, '内部类基本解释');
INSERT INTO `user_content` VALUES (36, 2, 'Robot Framework （公司工作）', '工作梦', '<span> <span> \r\n<pre><span style=\"color:#bbb529;\">*** Settings *** </span></pre>\r\n<pre><span style=\"color:#9876aa;\">Library </span>robot_restfultestlib.TestREST </pre>\r\n<pre><span style=\"color:#9876aa;\">Library </span>test_validations/ValidateDistance.py </pre>\r\n<pre><span style=\"color:#9876aa;\">Library </span>test_validations/ValidateDuplicated.py </pre>\r\n<pre><span style=\"color:#9876aa;\">Suite Setup </span>setup_configs <span style=\"color:#6a8759;\">${PROJECT}     ${REGION}      ${CLOUD_ENV} </span></pre>\r\n<pre><span style=\"color:#9876aa;\">Test Setup </span>init_case <span style=\"color:#6a8759;\">${SUITE NAME}</span>.<span style=\"color:#6a8759;\">${TEST NAME} </span><span style=\"color:#6a8759;\"> </span></pre>\r\n<pre><span style=\"color:#bbb529;\">*** Variables *** </span></pre>\r\n<pre><span style=\"color:#6a8759;\">${ROUTE} </span>40.7798732,-73.4254305;40.7819461,-73.4238455;40.7817888,-73.4262031;40.7816968,-73.42894269999999;40.75665679999999,-73.73993659999999;40.7554151,-73.74306399999999;40.789533,-73.7856771;40.7907409,-73.7925772;40.8200881,-73.8117261;40.8279301,-73.83370479999999;40.8288782,-73.8456935;40.8458998,-73.9298062;40.8493755,-73.93991299999999;40.8568987,-73.97253809999999;40.8594658,-73.97427739999999;40.8681524,-74.0043826;40.8379785,-74.01958089999999;40.8138234,-74.0558499;40.59820001,-74.2331226;40.5929963,-74.2297208;40.5925993,-74.22673589999999;40.581177,-74.2168003;40.5821789,-74.2214491 </pre>\r\n<pre><span style=\"color:#6a8759;\">${PROJECT} </span>Astrape </pre>\r\n<pre><span style=\"color:#6a8759;\">${REGION} </span>NA </pre>\r\n<pre><span style=\"color:#6a8759;\">${CLOUD_ENV} </span>TEST </pre>\r\n<pre><span style=\"color:#bbb529;\">*** Test Cases *** </span></pre>\r\n<pre>poi_alongroute_1 </pre>\r\n<pre><span style=\"color:#9876aa;\"> [Tags] </span>smoke </pre>\r\n<pre><span style=\"color:#9876aa;\"> [Documentation] </span>?(string and int) string address_line is 2 and check address_lines should has two string value </pre>\r\n<pre><span style=\"color:#6a8759;\"> ${resp}</span>=  POST       service=placewebservice        api=place/api/v2/search/alongroute/json      reqJson={\"route_points\":\"<span style=\"color:#6a8759;\">${ROUTE}</span>\",\"user_id\":\"TEST\",\"user_lat\":\"40.7798732\",\"user_lon\":\"-73.4254305\",\"cat_ids\":[\"263\"],\"locale\":\"en_US\",\"place_data_sources\":[\"YELP_WEB_SERVICE\"],\"address_line\":\"2\"} </pre>\r\n<pre><span style=\"color:#6897bb;\"> Validate Json Path </span>json_obj=<span style=\"color:#6a8759;\">${resp} </span>json_path=ResponseBody.status.code     expected=12200 </pre>\r\n<pre><span style=\"color:#6897bb;\"> Validate Json Path </span>json_obj=<span style=\"color:#6a8759;\">${resp} </span>json_path=ResponseBody.results[0].address[0].address_lines     expected=[\'64 Broadhollow Rd\', \'Melville NY 11747, USA\'] </pre>\r\n<pre><span style=\"color:#6a8759;\"> ${value}</span>=  get json path value <span style=\"color:#6a8759;\">${resp} </span>ResponseBody.results[0].address[0].address_lines </pre>\r\n<pre><span style=\"color:#6897bb;\"> Should Match Regexp </span><span style=\"color:#6a8759;\">${value} </span>[\'[\\\\S\\\\s]*?\', \'[\\\\S\\\\s]*?\'] </pre>\r\n<pre><span style=\"color:#6a8759;\"> ${response_time}</span>=   get json path value <span style=\"color:#6a8759;\">${resp} </span>ResponseBody.response_time </pre>\r\n<pre><span style=\"color:#6897bb;\"> Should Be True </span><span style=\"color:#6a8759;\">${response_time} </span>&lt; 200 </pre>\r\n<pre><span style=\"color:#6897bb;\"> validate is duplicated </span><span style=\"color:#6a8759;\">${resp} </span>ResponseBody.results       param_list=[\"name\", \"address\", \"geo_coordinates,200\"]  （python写的，有blog讲解）\r\n</pre>\r\n</span> </span>', '0', '2021-03-16 15:26:47', '/images/image/20210316/20210316141604_708.jpg', 'Stefan', 1, 0, 0, '有关robot的接口测试');
INSERT INTO `user_content` VALUES (37, 2, 'Python', '工作梦', '<blockquote>\r\n<pre>\r\n	<p>\r\n		\r\n		<p class=\"MsoNormal\">\r\n			import copy\r\n import re\r\n from math import *\r\n from robot_restfultestlib.TestREST import TestREST\r\n import json\r\n import pandas\r\n import types\r\n \r\n # comments use English\r\n # dict_get what is the usage?\r\n # variable naming\r\n # How to make sure you get poi name/address?\r\n # add example for how to use it\r\n # compareDate = TR.get_json_path_value(json_obj, results_set) this could be dict already? and it could be a list\r\n \r\n # validate is duplicated&nbsp;&nbsp;&nbsp;&nbsp; ${resp}&nbsp;&nbsp;&nbsp;&nbsp; ResponseBody.results\r\n # param_list=[\"name\", \"address\", \"geo_coordinates,200\"]&nbsp;&nbsp;&nbsp;&nbsp; The third data can be changed\r\n class ValidateDuplicated:\r\n &nbsp;&nbsp;&nbsp; def validate_is_duplicated(self, json_obj, results_set, param_list):\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>\"\"\"\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>:param</b> json_obj:&nbsp;&nbsp; ${resp}\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>:param</b> results_set:&nbsp; The result set of the response\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>:param</b> name:&nbsp; Parameter fields to check\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>:param</b> address:&nbsp;&nbsp; Parameter fields to check\r\n &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;<b>:return</b>:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"\"\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </i>TR = TestREST()\r\n \r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; compareDate = TR.get_json_path_value(json_obj, results_set)\r\n \r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; compareDate_list = eval(compareDate)\r\n \r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; param_list = eval(param_list)\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # poiName\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case_poi_name = []\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # save address\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case_address = []\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # address_lat_lon\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case_lat_lon_value = []\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # address_name\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case_address_name_value = []\r\n \r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; flag = True\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # get poiName value\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for item_name in compareDate_list:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item_name = dict(item_name)\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n         case_poi_name.append(ValidateDuplicated.dict_get(self, item_name, param_list[0],None))\r\n \r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #&nbsp;get address_name value\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for item_address in compareDate_list:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; item_address = dict(item_address)\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n         case_address.append(ValidateDuplicated.dict_get(self, item_address, param_list[1],None))\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for address_value in case_address:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for item in address_value:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; item = pandas.Series(item)\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case_address_name_value.append(item[0])\r\n \r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Parsed param_list[2]\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; param_coordinates = param_list[2].split(\',\')[0]\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; diff = param_list[2].split(\',\')[1]\r\n \r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # There are two sets of coordinate values, get NavLatLon or DisPlayLatLon\r\n &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for local_value in case_address:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for i in local_value:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = dict(i)\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if param_coordinates == \"geo_coordinates\":&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;     &nbsp;&nbsp;&nbsp;&nbsp;         case_lat_lon_value.append(i[param_coordinates])\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for j in i[param_coordinates]:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                         case_lat_lon_value.append(j)\r\n \r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case_name_set = set(case_poi_name)\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case_address_value_set = set(case_address_name_value)\r\n \r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if len(case_lat_lon_value) &lt;= 1:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;flag = False\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for i in range(0, len(case_lat_lon_value) - 1):\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for j in range(0, len(case_lat_lon_value) - i - 1):\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ValidateDuplicated.geo_Distance(self, case_lat_lon_value[i].get(\'longitude\'),\r\n		</p>\r\n\r\n		<p class=\"MsoNormal\">\r\n			case_lat_lon_value[i].get(\'latitude\'), case_lat_lon_value[j + 1].get(\'longitude\'),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                case_lat_lon_value[j + 1].get(\'latitude\'), diff) == True:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; flag = False\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; flag = True\r\n \r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if len(case_name_set) == len(case_address_name_value)\r\n                                and len(case_address_value_set) == len(case_address_name_value) and flag:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; raise AssertionError(\"duplicated\")\r\n &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;else:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(\"pass\")\r\n \r\n &nbsp;&nbsp;&nbsp; def geo_Distance(self, long_1, lat_1, long_2, lat_2, diff):\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>\"\"\"\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Calculate the great circle distance between two points\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; on the earth (specified in decimal degrees)\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"\"\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </i># The decimal system is converted to radians\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; long_1, lat_1, long_2, lat_2 = map(radians, [long_1, lat_1, long_2, lat_2])\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Haversine\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dlong = long_2 - long_1\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dlat = lat_2 - lat_1\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a = sin(dlat / 2) ** 2 + cos(lat_1) * cos(lat_2) * sin(dlong / 2) ** 2\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c = 2 * asin(sqrt(a))\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r = 6378137&nbsp; # earth radius\r\n \r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mNear = c * r&nbsp; # length of m\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; diff = int(diff)\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if mNear &gt; diff:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return True\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return False\r\n \r\n &nbsp;&nbsp;&nbsp; # Loop to get the value corresponding to the key in dict\r\n &nbsp;&nbsp;&nbsp; def dict_get(self, dict1, objkey, default):\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>\"\"\"\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>:param</b> dict1: loop of the dict\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>:param</b> objkey: the key to search\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>:param</b> default: None\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>:return</b>:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"\"\r\n &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</i>tmp = dict1\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for k, v in tmp.items():\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if k == objkey:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return v\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if type(v) is dict:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; target_value = self.dict_get(v, objkey, default)\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if target_value is not default:\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return target_value\r\n		</p>\r\n\r\n	</p>\r\n</pre>\r\n	<div style=\"text-align:left;\">\r\n	</div>\r\n</blockquote>', '0', '2021-03-16 15:13:29', '/images/image/20210316/20210316141604_708.jpg', 'Stefan', 1, 0, 0, 'ValidateDuplicate.py');
INSERT INTO `user_content` VALUES (38, 2, 'Python', '工作梦', '<p>\r\n	<span style=\"color:#FF9900;\">import sys, glob, os</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\">import copy</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\">from PyTestCaseGenerator.DataType.TestSuite import TestSuite</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\">from PyTestCaseGenerator.DataType.TestCase import TestCase,TestCaseParam</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\">def Xml2ROBOT(xmlFile):</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;print(\'====================== Converting \' + xmlFile + \' ======================\')</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;ROBOT_TESTCASE = \"*** Test Cases ***\"</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;ROBOT_TAGS = \" &nbsp; &nbsp;[Tags] &nbsp; &nbsp;\"</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;ROBOT_DESCRIPTION = \" &nbsp; &nbsp;[Documentation] &nbsp; &nbsp;\"</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;RESULTS_VALUE = \" &nbsp; &nbsp;${resp}\"</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;REQUEST_METHOD = \"POST\"</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;ROBOT_SERVICE = \" &nbsp; &nbsp;service=\"</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;ROBOT_API = \"api=place/api/v2/ &nbsp; &nbsp;\"</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;ROBOT_VALIDAtE = \" &nbsp; &nbsp;Validate Json Path &nbsp; &nbsp;json_obj=${resp} &nbsp; &nbsp;json_path=\"</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;ROBOT_EXPECTED = \" &nbsp; &nbsp;expected=\"</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;ROBOT_REQJSON = \"reqJson=\"</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;ROBOT_METHOD = \" &nbsp; &nbsp;get json path value\"</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;RESP_VALUE = \" &nbsp; &nbsp;${response_value}\"</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;RESP_RESULTS = \" &nbsp; &nbsp;ResponseBody.Results\"</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;testSuite = TestSuite()</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;testSuite.loadXml(xmlFile)</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;# Test SuitName as File Name</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;robotFileName = testSuite.testSuiteAttr.get(TestSuite.XMLATTR_TESTSUITE_NAME) + \'.robot\'</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;# Whether the current file exists in the current path, there is overwrite, there is no new</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;if os.path.exists(robotFileName):</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp;os.remove(robotFileName)</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;# Set the encoding format to write to a text file&nbsp; &nbsp;python创建文件的格式</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\">&nbsp; &nbsp; &nbsp; f = open(robotFileName, \'a+\', encoding=\"utf-8\")</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;# The title of test file</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\">&nbsp; &nbsp; &nbsp; f.write(ROBOT_TESTCASE + \"\\n\")</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;for service in testSuite.testSuiteServices:</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp;for inputSet in service.serviceInputSets:</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;selectedInputSet = None</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for suiteInputSet in testSuite.testSuiteInput:</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if inputSet == suiteInputSet.inputSetName:</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;selectedInputSet = suiteInputSet</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;break</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if selectedInputSet:</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for testCase in selectedInputSet.inputSetTestCases:</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;f.write(\"\\n\" + testCase[1].caseName + \"\\n\")</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;keyWords_set = set()</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if service.serviceKeywords != \"\":</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;keyWords_set.add(service.serviceKeywords)</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;elif selectedInputSet.inputSetKeywords != \"\":</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;keyWords_set.add(selectedInputSet.inputSetKeywords)</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;elif testCase[1].caseKeywords != \"\":</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;keyWords_set.add(testCase[1].caseKeywords)</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;keyWords_str = \',\'.join(str(e) for e in keyWords_set)</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;f.write(ROBOT_TAGS + keyWords_str + \'\\n\')</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;f.write(ROBOT_DESCRIPTION + testCase[1].caseDesc + \"\\n\")</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;param_name = []</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;param_value = []</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for param in testCase[1].caseParams:</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;param_name.append(param.paramName)</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if param.paramType == \"java.lang.String\":</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;param_value.append(param.paramValue)</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;elif param.paramType == \"java.lang.Integer\":</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;param_value.append(int(param.paramValue))</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;reqJson = dict(zip(param_name, param_value))</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;f.write(RESULTS_VALUE + \"= &nbsp; &nbsp;\" + REQUEST_METHOD)</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;f.write(ROBOT_SERVICE + service.serviceName + \" &nbsp; &nbsp;\")</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;f.write(ROBOT_API)</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;f.write(ROBOT_REQJSON + str(reqJson) + \"\\n\")</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for eleAssertion in testCase[1].caseExpectations:</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# type of scope like &nbsp;scope=4,5</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for scope in eleAssertion.assertionRuleScope.split(\',\'):</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# type of method &nbsp;contains or in</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if eleAssertion.assertionRuleMethod == \"contains\":</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;METHOD_CONTAIN_OR_IN = \" &nbsp; &nbsp;Should contain\"</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;f.write(</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;RESP_VALUE + \"=\" + ROBOT_METHOD + RESULTS_VALUE + RESP_RESULTS + \"[\" + str(</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;eval(scope) - 1) + \"]\\n\")</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;f.write(METHOD_CONTAIN_OR_IN + RESP_VALUE + \" &nbsp; &nbsp;\" + eleAssertion.assertionRuleField + \"\\n\")</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;f.write(ROBOT_VALIDAtE + RESP_RESULTS + \"[\" + str(</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;eval(scope) - 1) + \"]\")</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;f.write(ROBOT_EXPECTED + eleAssertion.assertionRuleValue + \"\\n\")</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;else:</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# &nbsp;&lt;assertRule field=\"FormattedName\" method=\"in\" name=\"street\" scope=\"4,5\" value=\"武夷山大道12号\" /&gt;</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;f.write(\" &nbsp; &nbsp;comments &nbsp; &nbsp;\" + \"&lt;assertRule filed=\" + eleAssertion.assertionRuleField +</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" method=\" + eleAssertion.assertionRuleMethod + \" name=\" + eleAssertion.assertionRuleName +</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" scope=\" + eleAssertion.assertionRuleScope + \" value=\" + eleAssertion.assertionRuleValue + \'&gt;\\n\')</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# print(eleAssertion.assertionRuleField)</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# print(eleAssertion.assertionRuleValue)</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# print(eleAssertion.assertio<span style=\"font-family:Microsoft YaHei;\"><span style=\"font-size:16px;\"></span></span>nRuleScope)</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# print(eleAssertion.assertionRuleMethod)</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;f.close()</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\">\'\'\'</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;Main entrance</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\">\'\'\'</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\">if __name__ == \'__main__\':</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;if len(sys.argv) &lt;= 2:</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp;print(\'Please input xml file\')</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp;exit(-1)</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;else:</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp;if sys.argv[1] == \'-f\':</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for xmlFile in sys.argv[2].split(\',\'):</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for file in glob.glob(xmlFile): # Input can be wildcard</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Xml2ROBOT(file)</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp;elif sys.argv[1] == \'-d\':</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for xmlFolder in sys.argv[2].split(\',\'):</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for file in glob.glob(xmlFolder + os.sep + \'*.xml\'): # Input can be wildcard</span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Xml2ROBOT(file)</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#FF9900;\"> &nbsp; &nbsp;print(\'All done!\')</span>\r\n</p>', '0', '2021-03-16 15:20:07', '/images/image/20210316/20210316141604_708.jpg', 'Stefan', 1, 0, 0, '读取xml文件，转换成robot文件');

-- ----------------------------
-- Table structure for user_info
-- ----------------------------
DROP TABLE IF EXISTS `user_info`;
CREATE TABLE `user_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `u_id` bigint(20) NULL DEFAULT NULL,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `sex` varchar(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `birthday` date NULL DEFAULT NULL,
  `hobby` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `address` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `user_info_index_key`(`id`) USING BTREE,
  INDEX `FK_Reference_5`(`u_id`) USING BTREE,
  CONSTRAINT `FK_Reference_5` FOREIGN KEY (`u_id`) REFERENCES `user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = latin1 COLLATE = latin1_swedish_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user_info
-- ----------------------------
INSERT INTO `user_info` VALUES (1, 2, '', NULL, NULL, NULL, '');

-- ----------------------------
-- Event structure for e_delete_upvote
-- ----------------------------
DROP EVENT IF EXISTS `e_delete_upvote`;
delimiter ;;
CREATE DEFINER = `root`@`localhost` EVENT `e_delete_upvote`
ON SCHEDULE
EVERY '1' DAY STARTS '2021-03-02 00:00:00'
ON COMPLETION PRESERVE
DO TRUNCATE TABLE dream_db.upvote
;;
delimiter ;

SET FOREIGN_KEY_CHECKS = 1;
